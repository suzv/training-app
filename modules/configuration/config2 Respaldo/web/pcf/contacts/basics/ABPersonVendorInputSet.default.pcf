<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <InputSet
    id="ABPersonVendorInputSet"
    mode="default">
    <Require
      name="person"
      type="ABPerson"/>
    <InputDivider/>
    <Label
      label="DisplayKey.get(&quot;Web.ContactDetail.Phone&quot;)"/>
    <ABContactInput
      editable="true"
      forceContactSubtype="entity.ABPerson"
      id="PrimaryContact"
      label="DisplayKey.get(&quot;Web.ContactDetail.PrimaryContact&quot;)"
      newContactMenu="NewPersonOnlyPickerMenuItemSet"
      parentContact="person"
      value="person.PrimaryContact"
      visible="person.TagTypes.contains(ContactTagType.TC_VENDOR)"/>
    <InputSetRef
      def="GlobalPhoneInputSet(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(person,ABPerson#HomePhone), DisplayKey.get(&quot;Web.ContactDetail.Phone.Home&quot;), false))"
      editable="true"
      id="Home"/>
    <InputSetRef
      def="GlobalPhoneInputSet(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(person,ABPerson#WorkPhone), DisplayKey.get(&quot;Web.ContactDetail.Phone.Work&quot;), false))"
      editable="true"
      id="Work"/>
    <InputSetRef
      def="GlobalPhoneInputSet(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(person, ABPerson#CellPhone), DisplayKey.get(&quot;Web.ContactDetail.Phone.Cell&quot;), false))"
      editable="true"
      id="Cell"/>
    <InputSetRef
      def="GlobalPhoneInputSet(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(person, ABContact#FaxPhone), DisplayKey.get(&quot;Web.ContactDetail.Phone.Fax&quot;), false))"
      editable="true"
      id="Fax"/>
    <TypeKeyInput
      editable="true"
      id="PrimaryPhone"
      label="DisplayKey.get(&quot;Web.ContactDetail.Phone.PrimaryPhone&quot;)"
      validationExpression="                 if (person.PrimaryPhone == null or                     (person.PrimaryPhone == TC_WORK and person.WorkPhone != null) or                     (person.PrimaryPhone == TC_HOME and person.HomePhone != null) or                     (person.PrimaryPhone == TC_MOBILE and person.CellPhone != null)) {                   return null;                 } else {                   return DisplayKey.get(&quot;Web.ContactDetail.Phone.PrimaryPhone.Error&quot;);                 }"
      value="person.PrimaryPhone"
      valueType="typekey.PrimaryPhoneType"/>
    <InputDivider/>
    <Label
      label="DisplayKey.get(&quot;Web.ContactDetail.Email&quot;)"/>
    <TextInput
      editable="true"
      formatType="email"
      id="Primary"
      label="DisplayKey.get(&quot;Web.ContactDetail.Email.Primary&quot;)"
      value="person.EmailAddress1"/>
    <TextInput
      editable="true"
      formatType="email"
      id="Secondary"
      label="DisplayKey.get(&quot;Web.ContactDetail.Email.Secondary&quot;)"
      value="person.EmailAddress2"/>
  </InputSet>
</PCF>