<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:gwsoap="http://guidewire.com/ws/soapheaders" xmlns:gwwsdl="http://guidewire.com/pl/wsdl" xmlns:pogo="http://guidewire.com/pc/typekey" xmlns:pogo2="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIPendingChangeContext" xmlns:pogo3="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDContainer" xmlns:pogo4="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDTuple" xmlns:soap11="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://guidewire.com/pc/ws/gw/webservice/pc/pc900/contact/ContactAPI" name="ContactAPI" targetNamespace="http://guidewire.com/pc/ws/gw/webservice/pc/pc900/contact/ContactAPI">
  <wsdl:types>
    <xs:schema xmlns:imported="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.jobmodel" xmlns:imported2="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.policyperiodmodel" xmlns:imported3="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.accountmodel" xmlns:imported4="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.contactmodel" xmlns:imported5="http://guidewire.com/ctc/beanmodel" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/pc/ws/gw/webservice/pc/pc900/contact/ContactAPI">
      <xs:import namespace="http://guidewire.com/ws/soapheaders" schemaLocation="soapheaders.xsd"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDTuple"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDContainer"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIPendingChangeContext"/>
      <xs:import namespace="http://guidewire.com/ctc/beanmodel" schemaLocation="BeanModel.xsd"/>
      <xs:import namespace="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.contactmodel" schemaLocation="ContactModel.xsd"/>
      <xs:import namespace="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.accountmodel" schemaLocation="AccountModel.xsd"/>
      <xs:import namespace="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.policyperiodmodel" schemaLocation="PolicyPeriodModel.xsd"/>
      <xs:import namespace="http://guidewire.com/pc/gx/gw.webservice.pc.pc900.gxmodel.jobmodel" schemaLocation="JobModel.xsd"/>
      <xs:import namespace="http://guidewire.com/pc/typekey"/>
      <!-- removeContactByPublicID(String) : String -->
      <xs:element name="removeContactByPublicID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="contactPublicId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeContactByPublicIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SOAPException">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RequiredFieldException">
        <xs:complexType/>
      </xs:element>
      <xs:element name="BadIdentifierException">
        <xs:complexType/>
      </xs:element>
      <xs:element name="WsiAuthenticationException">
        <xs:complexType/>
      </xs:element>
      <!-- activateContactOnAllAccounts(String, boolean) : int -->
      <xs:element name="activateContactOnAllAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="contactPublicId" type="xs:string"/>
            <xs:element name="activate" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activateContactOnAllAccountsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- mergeContactAddressesByPublicId(String, String, String) : String -->
      <xs:element name="mergeContactAddressesByPublicId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="contactPublicId" type="xs:string"/>
            <xs:element minOccurs="0" name="survivingAddressPublicId" type="xs:string"/>
            <xs:element minOccurs="0" name="mergedAddressPublicId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="mergeContactAddressesByPublicIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IllegalArgumentException">
        <xs:complexType/>
      </xs:element>
      <!-- mergeContactAddressesByABUID(String, String, String) : String -->
      <xs:element name="mergeContactAddressesByABUID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="contactABUID" type="xs:string"/>
            <xs:element minOccurs="0" name="survivingAddressABUID" type="xs:string"/>
            <xs:element minOccurs="0" name="mergedAddressABUID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="mergeContactAddressesByABUIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAssociatedWorkOrders(String, PolicyPeriodStatus) : Job[] -->
      <xs:element name="getAssociatedWorkOrders">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="addressBookUID" type="xs:string"/>
            <xs:element minOccurs="0" name="workOrderStatus" type="pogo:PolicyPeriodStatus"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedWorkOrdersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:Job"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAssociatedWorkOrdersByPublicID(String, PolicyPeriodStatus) : Job[] -->
      <xs:element name="getAssociatedWorkOrdersByPublicID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="publicId" type="xs:string"/>
            <xs:element minOccurs="0" name="workOrderStatus" type="pogo:PolicyPeriodStatus"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedWorkOrdersByPublicIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:Job"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAssociatedPolicies(String) : PolicyPeriod[] -->
      <xs:element name="getAssociatedPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="addressBookUID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedPoliciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported2:PolicyPeriod"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAssociatedPoliciesByPublicID(String) : PolicyPeriod[] -->
      <xs:element name="getAssociatedPoliciesByPublicID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="publicId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedPoliciesByPublicIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported2:PolicyPeriod"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAssociatedAccounts(String) : Account[] -->
      <xs:element name="getAssociatedAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="addressBookUID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedAccountsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported3:Account"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAssociatedAccountsByPublicID(String) : Account[] -->
      <xs:element name="getAssociatedAccountsByPublicID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="publicId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedAccountsByPublicIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported3:Account"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- addContact(Contact) : String -->
      <xs:element name="addContact">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="externalContact" type="imported4:Contact"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addContactResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- updateContact(XmlBackedInstance) -->
      <xs:element name="updateContact">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="contactXML">
              <xs:complexType>
                <xs:sequence>
                  <xs:element ref="imported5:xmlBackedInstance"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateContactResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="IllegalStateException">
        <xs:complexType/>
      </xs:element>
      <!-- removeContact(String) -->
      <xs:element name="removeContact">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="addressBookUID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeContactResponse">
        <xs:complexType/>
      </xs:element>
      <!-- isContactDeletable(String) : boolean -->
      <xs:element name="isContactDeletable">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="addressBookUID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isContactDeletableResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- isContactDeletableByPublicID(String) : boolean -->
      <xs:element name="isContactDeletableByPublicID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="publicId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isContactDeletableByPublicIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- mergeContacts(String, String) -->
      <xs:element name="mergeContacts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keptContactABUID" type="xs:string"/>
            <xs:element minOccurs="0" name="deletedContactABUID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="mergeContactsResponse">
        <xs:complexType/>
      </xs:element>
      <!-- mergeContactsByPublicId(String, String) : String -->
      <xs:element name="mergeContactsByPublicId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keptContactPubId" type="xs:string"/>
            <xs:element minOccurs="0" name="deletedContactPubId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="mergeContactsByPublicIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- pendingUpdateRejected(ABClientAPIPendingChangeContext) -->
      <xs:element name="pendingUpdateRejected">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="context" type="pogo2:ABClientAPIPendingChangeContext"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="pendingUpdateRejectedResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="UnsupportedOperationException">
        <xs:complexType/>
      </xs:element>
      <!-- pendingCreateRejected(ABClientAPIPendingChangeContext) -->
      <xs:element name="pendingCreateRejected">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="context" type="pogo2:ABClientAPIPendingChangeContext"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="pendingCreateRejectedResponse">
        <xs:complexType/>
      </xs:element>
      <!-- pendingCreateApproved(ABClientAPIPendingChangeContext) -->
      <xs:element name="pendingCreateApproved">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="context" type="pogo2:ABClientAPIPendingChangeContext"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="pendingCreateApprovedResponse">
        <xs:complexType/>
      </xs:element>
      <!-- pendingUpdateApproved(ABClientAPIPendingChangeContext, ABClientAPIAddressBookUIDContainer) -->
      <xs:element name="pendingUpdateApproved">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="context" type="pogo2:ABClientAPIPendingChangeContext"/>
            <xs:element minOccurs="0" name="abuidContainer" type="pogo3:ABClientAPIAddressBookUIDContainer"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="pendingUpdateApprovedResponse">
        <xs:complexType/>
      </xs:element>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/pc/typekey">
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDTuple"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDContainer"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIPendingChangeContext"/>
      <xs:simpleType name="PolicyPeriodStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Draft"/>
          <xs:enumeration value="Temporary"/>
          <xs:enumeration value="Withdrawn"/>
          <xs:enumeration value="Declined"/>
          <xs:enumeration value="Expired"/>
          <xs:enumeration value="New"/>
          <xs:enumeration value="NonRenewing"/>
          <xs:enumeration value="Quoted"/>
          <xs:enumeration value="Quoting"/>
          <xs:enumeration value="Binding"/>
          <xs:enumeration value="Bound"/>
          <xs:enumeration value="Canceling"/>
          <xs:enumeration value="AuditComplete"/>
          <xs:enumeration value="NonRenewed"/>
          <xs:enumeration value="NotTaken"/>
          <xs:enumeration value="NotTaking"/>
          <xs:enumeration value="Reinstating"/>
          <xs:enumeration value="Renewing"/>
          <xs:enumeration value="Rescinded"/>
          <xs:enumeration value="Rescinding"/>
          <xs:enumeration value="Waived"/>
          <xs:enumeration value="LegacyConversion"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactChangeResolution">
        <xs:restriction base="xs:string">
          <xs:enumeration value="already_applied"/>
          <xs:enumeration value="approved"/>
          <xs:enumeration value="more_info_req"/>
          <xs:enumeration value="rejected"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIPendingChangeContext">
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDTuple"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDContainer"/>
      <xs:import namespace="http://guidewire.com/pc/typekey"/>
      <xs:complexType name="ABClientAPIPendingChangeContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="AddressBookUID" type="xs:string"/>
          <xs:element minOccurs="0" name="ChangeEntityTypeName" type="xs:string"/>
          <xs:element minOccurs="0" name="ChangeXML" type="xs:string"/>
          <xs:element minOccurs="0" name="PublicID" type="xs:string"/>
          <xs:element minOccurs="0" name="Resolution" type="pogo:ContactChangeResolution"/>
          <xs:element minOccurs="0" name="ResolutionReason" type="xs:string"/>
          <xs:element minOccurs="0" name="RootEntityDisplayName" type="xs:string"/>
          <xs:element minOccurs="0" name="RootEntityID" type="xs:string"/>
          <xs:element minOccurs="0" name="RootEntityType" type="xs:string"/>
          <xs:element minOccurs="0" name="UserDisplayName" type="xs:string"/>
          <xs:element minOccurs="0" name="Username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDContainer">
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDTuple"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIPendingChangeContext"/>
      <xs:import namespace="http://guidewire.com/pc/typekey"/>
      <xs:complexType name="ABClientAPIAddressBookUIDContainer">
        <xs:sequence>
          <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="AddressBookUIDTuples">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo4:ABClientAPIAddressBookUIDTuple"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="ContactABUID" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDTuple">
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIAddressBookUIDContainer"/>
      <xs:import namespace="http://guidewire.com/pl/ws/gw/webservice/contactapi/ab900/ABClientAPIPendingChangeContext"/>
      <xs:import namespace="http://guidewire.com/pc/typekey"/>
      <xs:complexType name="ABClientAPIAddressBookUIDTuple">
        <xs:sequence>
          <xs:element minOccurs="0" name="EntityType" type="xs:string"/>
          <xs:element minOccurs="0" name="External_PublicID" type="xs:string"/>
          <xs:element minOccurs="0" name="LinkID" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:portType name="ContactAPIPortType">
    <wsdl:operation name="removeContactByPublicID">
      <wsdl:input message="tns:removeContactByPublicID" name="removeContactByPublicID"/>
      <wsdl:output message="tns:removeContactByPublicIDResponse" name="removeContactByPublicIDResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If cannot find entity with given identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="activateContactOnAllAccounts">
      <wsdl:input message="tns:activateContactOnAllAccounts" name="activateContactOnAllAccounts"/>
      <wsdl:output message="tns:activateContactOnAllAccountsResponse" name="activateContactOnAllAccountsResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If any field is null -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If the Account or Contact cannot be found or If you try to deactivate an account holder -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="mergeContactAddressesByPublicId">
      <wsdl:input message="tns:mergeContactAddressesByPublicId" name="mergeContactAddressesByPublicId"/>
      <wsdl:output message="tns:mergeContactAddressesByPublicIdResponse" name="mergeContactAddressesByPublicIdResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If could not find contact by the given identifier  -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If any argument is invalid -->
      <wsdl:fault message="tns:IllegalArgumentException" name="IllegalArgumentException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="mergeContactAddressesByABUID">
      <wsdl:input message="tns:mergeContactAddressesByABUID" name="mergeContactAddressesByABUID"/>
      <wsdl:output message="tns:mergeContactAddressesByABUIDResponse" name="mergeContactAddressesByABUIDResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If could not find contact by the given identifier  -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If any argument is invalid -->
      <wsdl:fault message="tns:IllegalArgumentException" name="IllegalArgumentException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedWorkOrders">
      <wsdl:input message="tns:getAssociatedWorkOrders" name="getAssociatedWorkOrders"/>
      <wsdl:output message="tns:getAssociatedWorkOrdersResponse" name="getAssociatedWorkOrdersResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a matching contact already exists in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedWorkOrdersByPublicID">
      <wsdl:input message="tns:getAssociatedWorkOrdersByPublicID" name="getAssociatedWorkOrdersByPublicID"/>
      <wsdl:output message="tns:getAssociatedWorkOrdersByPublicIDResponse" name="getAssociatedWorkOrdersByPublicIDResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a matching contact already exists in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedPolicies">
      <wsdl:input message="tns:getAssociatedPolicies" name="getAssociatedPolicies"/>
      <wsdl:output message="tns:getAssociatedPoliciesResponse" name="getAssociatedPoliciesResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a matching contact already exists in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedPoliciesByPublicID">
      <wsdl:input message="tns:getAssociatedPoliciesByPublicID" name="getAssociatedPoliciesByPublicID"/>
      <wsdl:output message="tns:getAssociatedPoliciesByPublicIDResponse" name="getAssociatedPoliciesByPublicIDResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a matching contact already exists in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedAccounts">
      <wsdl:input message="tns:getAssociatedAccounts" name="getAssociatedAccounts"/>
      <wsdl:output message="tns:getAssociatedAccountsResponse" name="getAssociatedAccountsResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a matching contact already exists in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedAccountsByPublicID">
      <wsdl:input message="tns:getAssociatedAccountsByPublicID" name="getAssociatedAccountsByPublicID"/>
      <wsdl:output message="tns:getAssociatedAccountsByPublicIDResponse" name="getAssociatedAccountsByPublicIDResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a matching contact already exists in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="addContact">
      <wsdl:input message="tns:addContact" name="addContact"/>
      <wsdl:output message="tns:addContactResponse" name="addContactResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a matching contact already exists in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <wsdl:input message="tns:updateContact" name="updateContact"/>
      <wsdl:output message="tns:updateContactResponse" name="updateContactResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If no matching contact can be found in PolicyCenter -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If update is not allowed -->
      <wsdl:fault message="tns:IllegalStateException" name="IllegalStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="removeContact">
      <wsdl:input message="tns:removeContact" name="removeContact"/>
      <wsdl:output message="tns:removeContactResponse" name="removeContactResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If unable to find the contact -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If remove is not allowed -->
      <wsdl:fault message="tns:IllegalStateException" name="IllegalStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="isContactDeletable">
      <wsdl:input message="tns:isContactDeletable" name="isContactDeletable"/>
      <wsdl:output message="tns:isContactDeletableResponse" name="isContactDeletableResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If cannot find entity with given identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="isContactDeletableByPublicID">
      <wsdl:input message="tns:isContactDeletableByPublicID" name="isContactDeletableByPublicID"/>
      <wsdl:output message="tns:isContactDeletableByPublicIDResponse" name="isContactDeletableByPublicIDResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If cannot find entity with given identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="mergeContacts">
      <wsdl:input message="tns:mergeContacts" name="mergeContacts"/>
      <wsdl:output message="tns:mergeContactsResponse" name="mergeContactsResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If cannot find entity with given identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If any argument is invalid -->
      <wsdl:fault message="tns:IllegalArgumentException" name="IllegalArgumentException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="mergeContactsByPublicId">
      <wsdl:input message="tns:mergeContactsByPublicId" name="mergeContactsByPublicId"/>
      <wsdl:output message="tns:mergeContactsByPublicIdResponse" name="mergeContactsByPublicIdResponse"/>
      <!-- If communication errors occur -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If required field is missing -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If cannot find entity with given identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If any argument is invalid -->
      <wsdl:fault message="tns:IllegalArgumentException" name="IllegalArgumentException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="pendingUpdateRejected">
      <wsdl:input message="tns:pendingUpdateRejected" name="pendingUpdateRejected"/>
      <wsdl:output message="tns:pendingUpdateRejectedResponse" name="pendingUpdateRejectedResponse"/>
      <!-- If this operation is not supported -->
      <wsdl:fault message="tns:UnsupportedOperationException" name="UnsupportedOperationException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="pendingCreateRejected">
      <wsdl:input message="tns:pendingCreateRejected" name="pendingCreateRejected"/>
      <wsdl:output message="tns:pendingCreateRejectedResponse" name="pendingCreateRejectedResponse"/>
      <!-- If this operation is not supported -->
      <wsdl:fault message="tns:UnsupportedOperationException" name="UnsupportedOperationException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="pendingCreateApproved">
      <wsdl:input message="tns:pendingCreateApproved" name="pendingCreateApproved"/>
      <wsdl:output message="tns:pendingCreateApprovedResponse" name="pendingCreateApprovedResponse"/>
      <!-- If this operation is not supported -->
      <wsdl:fault message="tns:UnsupportedOperationException" name="UnsupportedOperationException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="pendingUpdateApproved">
      <wsdl:input message="tns:pendingUpdateApproved" name="pendingUpdateApproved"/>
      <wsdl:output message="tns:pendingUpdateApprovedResponse" name="pendingUpdateApprovedResponse"/>
      <!-- If this operation is not supported -->
      <wsdl:fault message="tns:UnsupportedOperationException" name="UnsupportedOperationException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ContactAPISoap12Binding" type="tns:ContactAPIPortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="removeContactByPublicID">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="removeContactByPublicID">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeContactByPublicIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateContactOnAllAccounts">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="activateContactOnAllAccounts">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="activateContactOnAllAccountsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContactAddressesByPublicId">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="mergeContactAddressesByPublicId">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactAddressesByPublicIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap12:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContactAddressesByABUID">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="mergeContactAddressesByABUID">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactAddressesByABUIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap12:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedWorkOrders">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAssociatedWorkOrders">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedWorkOrdersResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedWorkOrdersByPublicID">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAssociatedWorkOrdersByPublicID">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedWorkOrdersByPublicIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedPolicies">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAssociatedPolicies">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedPoliciesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedPoliciesByPublicID">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAssociatedPoliciesByPublicID">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedPoliciesByPublicIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedAccounts">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAssociatedAccounts">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedAccountsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedAccountsByPublicID">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAssociatedAccountsByPublicID">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedAccountsByPublicIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addContact">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="addContact">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addContactResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="updateContact">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateContactResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalStateException">
        <soap12:fault name="IllegalStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeContact">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="removeContact">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeContactResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalStateException">
        <soap12:fault name="IllegalStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isContactDeletable">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="isContactDeletable">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isContactDeletableResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isContactDeletableByPublicID">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="isContactDeletableByPublicID">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isContactDeletableByPublicIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContacts">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="mergeContacts">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap12:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContactsByPublicId">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="mergeContactsByPublicId">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactsByPublicIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap12:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingUpdateRejected">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="pendingUpdateRejected">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingUpdateRejectedResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap12:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingCreateRejected">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="pendingCreateRejected">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingCreateRejectedResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap12:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingCreateApproved">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="pendingCreateApproved">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingCreateApprovedResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap12:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingUpdateApproved">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="pendingUpdateApproved">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingUpdateApprovedResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap12:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ContactAPISoap11Binding" type="tns:ContactAPIPortType">
    <soap11:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="removeContactByPublicID">
      <soap11:operation style="document"/>
      <wsdl:input name="removeContactByPublicID">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeContactByPublicIDResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateContactOnAllAccounts">
      <soap11:operation style="document"/>
      <wsdl:input name="activateContactOnAllAccounts">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="activateContactOnAllAccountsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContactAddressesByPublicId">
      <soap11:operation style="document"/>
      <wsdl:input name="mergeContactAddressesByPublicId">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactAddressesByPublicIdResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap11:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContactAddressesByABUID">
      <soap11:operation style="document"/>
      <wsdl:input name="mergeContactAddressesByABUID">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactAddressesByABUIDResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap11:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedWorkOrders">
      <soap11:operation style="document"/>
      <wsdl:input name="getAssociatedWorkOrders">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedWorkOrdersResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedWorkOrdersByPublicID">
      <soap11:operation style="document"/>
      <wsdl:input name="getAssociatedWorkOrdersByPublicID">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedWorkOrdersByPublicIDResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedPolicies">
      <soap11:operation style="document"/>
      <wsdl:input name="getAssociatedPolicies">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedPoliciesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedPoliciesByPublicID">
      <soap11:operation style="document"/>
      <wsdl:input name="getAssociatedPoliciesByPublicID">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedPoliciesByPublicIDResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedAccounts">
      <soap11:operation style="document"/>
      <wsdl:input name="getAssociatedAccounts">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedAccountsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedAccountsByPublicID">
      <soap11:operation style="document"/>
      <wsdl:input name="getAssociatedAccountsByPublicID">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedAccountsByPublicIDResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addContact">
      <soap11:operation style="document"/>
      <wsdl:input name="addContact">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addContactResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <soap11:operation style="document"/>
      <wsdl:input name="updateContact">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateContactResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalStateException">
        <soap11:fault name="IllegalStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeContact">
      <soap11:operation style="document"/>
      <wsdl:input name="removeContact">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeContactResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalStateException">
        <soap11:fault name="IllegalStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isContactDeletable">
      <soap11:operation style="document"/>
      <wsdl:input name="isContactDeletable">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isContactDeletableResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isContactDeletableByPublicID">
      <soap11:operation style="document"/>
      <wsdl:input name="isContactDeletableByPublicID">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isContactDeletableByPublicIDResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContacts">
      <soap11:operation style="document"/>
      <wsdl:input name="mergeContacts">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap11:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mergeContactsByPublicId">
      <soap11:operation style="document"/>
      <wsdl:input name="mergeContactsByPublicId">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="mergeContactsByPublicIdResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IllegalArgumentException">
        <soap11:fault name="IllegalArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingUpdateRejected">
      <soap11:operation style="document"/>
      <wsdl:input name="pendingUpdateRejected">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingUpdateRejectedResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap11:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingCreateRejected">
      <soap11:operation style="document"/>
      <wsdl:input name="pendingCreateRejected">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingCreateRejectedResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap11:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingCreateApproved">
      <soap11:operation style="document"/>
      <wsdl:input name="pendingCreateApproved">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingCreateApprovedResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap11:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pendingUpdateApproved">
      <soap11:operation style="document"/>
      <wsdl:input name="pendingUpdateApproved">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingUpdateApprovedResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnsupportedOperationException">
        <soap11:fault name="UnsupportedOperationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ContactAPI">
    <wsdl:port binding="tns:ContactAPISoap12Binding" name="ContactAPISoap12Port">
      <soap12:address location="http://localhost:8180/pc/ws/gw/webservice/pc/pc900/contact/ContactAPI"/>
      <gwwsdl:address location="${pc}/ws/gw/webservice/pc/pc900/contact/ContactAPI"/>
    </wsdl:port>
    <wsdl:port binding="tns:ContactAPISoap11Binding" name="ContactAPISoap11Port">
      <soap11:address location="http://localhost:8180/pc/ws/gw/webservice/pc/pc900/contact/ContactAPI/soap11"/>
      <gwwsdl:address location="${pc}/ws/gw/webservice/pc/pc900/contact/ContactAPI/soap11"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:message name="removeContactByPublicID">
    <wsdl:part element="tns:removeContactByPublicID" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="removeContactByPublicIDResponse">
    <wsdl:part element="tns:removeContactByPublicIDResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="SOAPException">
    <wsdl:part element="tns:SOAPException" name="SOAPException"/>
  </wsdl:message>
  <wsdl:message name="RequiredFieldException">
    <wsdl:part element="tns:RequiredFieldException" name="RequiredFieldException"/>
  </wsdl:message>
  <wsdl:message name="BadIdentifierException">
    <wsdl:part element="tns:BadIdentifierException" name="BadIdentifierException"/>
  </wsdl:message>
  <wsdl:message name="WsiAuthenticationException">
    <wsdl:part element="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
  </wsdl:message>
  <wsdl:message name="activateContactOnAllAccounts">
    <wsdl:part element="tns:activateContactOnAllAccounts" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="activateContactOnAllAccountsResponse">
    <wsdl:part element="tns:activateContactOnAllAccountsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="mergeContactAddressesByPublicId">
    <wsdl:part element="tns:mergeContactAddressesByPublicId" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="mergeContactAddressesByPublicIdResponse">
    <wsdl:part element="tns:mergeContactAddressesByPublicIdResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="IllegalArgumentException">
    <wsdl:part element="tns:IllegalArgumentException" name="IllegalArgumentException"/>
  </wsdl:message>
  <wsdl:message name="mergeContactAddressesByABUID">
    <wsdl:part element="tns:mergeContactAddressesByABUID" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="mergeContactAddressesByABUIDResponse">
    <wsdl:part element="tns:mergeContactAddressesByABUIDResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedWorkOrders">
    <wsdl:part element="tns:getAssociatedWorkOrders" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedWorkOrdersResponse">
    <wsdl:part element="tns:getAssociatedWorkOrdersResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedWorkOrdersByPublicID">
    <wsdl:part element="tns:getAssociatedWorkOrdersByPublicID" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedWorkOrdersByPublicIDResponse">
    <wsdl:part element="tns:getAssociatedWorkOrdersByPublicIDResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedPolicies">
    <wsdl:part element="tns:getAssociatedPolicies" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedPoliciesResponse">
    <wsdl:part element="tns:getAssociatedPoliciesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedPoliciesByPublicID">
    <wsdl:part element="tns:getAssociatedPoliciesByPublicID" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedPoliciesByPublicIDResponse">
    <wsdl:part element="tns:getAssociatedPoliciesByPublicIDResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedAccounts">
    <wsdl:part element="tns:getAssociatedAccounts" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedAccountsResponse">
    <wsdl:part element="tns:getAssociatedAccountsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedAccountsByPublicID">
    <wsdl:part element="tns:getAssociatedAccountsByPublicID" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedAccountsByPublicIDResponse">
    <wsdl:part element="tns:getAssociatedAccountsByPublicIDResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addContact">
    <wsdl:part element="tns:addContact" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addContactResponse">
    <wsdl:part element="tns:addContactResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateContact">
    <wsdl:part element="tns:updateContact" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateContactResponse">
    <wsdl:part element="tns:updateContactResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="IllegalStateException">
    <wsdl:part element="tns:IllegalStateException" name="IllegalStateException"/>
  </wsdl:message>
  <wsdl:message name="removeContact">
    <wsdl:part element="tns:removeContact" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="removeContactResponse">
    <wsdl:part element="tns:removeContactResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isContactDeletable">
    <wsdl:part element="tns:isContactDeletable" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isContactDeletableResponse">
    <wsdl:part element="tns:isContactDeletableResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isContactDeletableByPublicID">
    <wsdl:part element="tns:isContactDeletableByPublicID" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isContactDeletableByPublicIDResponse">
    <wsdl:part element="tns:isContactDeletableByPublicIDResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="mergeContacts">
    <wsdl:part element="tns:mergeContacts" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="mergeContactsResponse">
    <wsdl:part element="tns:mergeContactsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="mergeContactsByPublicId">
    <wsdl:part element="tns:mergeContactsByPublicId" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="mergeContactsByPublicIdResponse">
    <wsdl:part element="tns:mergeContactsByPublicIdResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingUpdateRejected">
    <wsdl:part element="tns:pendingUpdateRejected" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingUpdateRejectedResponse">
    <wsdl:part element="tns:pendingUpdateRejectedResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="UnsupportedOperationException">
    <wsdl:part element="tns:UnsupportedOperationException" name="UnsupportedOperationException"/>
  </wsdl:message>
  <wsdl:message name="pendingCreateRejected">
    <wsdl:part element="tns:pendingCreateRejected" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingCreateRejectedResponse">
    <wsdl:part element="tns:pendingCreateRejectedResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingCreateApproved">
    <wsdl:part element="tns:pendingCreateApproved" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingCreateApprovedResponse">
    <wsdl:part element="tns:pendingCreateApprovedResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingUpdateApproved">
    <wsdl:part element="tns:pendingUpdateApproved" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingUpdateApprovedResponse">
    <wsdl:part element="tns:pendingUpdateApprovedResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="gw-authentication">
    <wsdl:part element="gwsoap:authentication" name="gw-authentication"/>
  </wsdl:message>
  <wsdl:message name="gw-locale">
    <wsdl:part element="gwsoap:locale" name="gw-locale"/>
  </wsdl:message>
</wsdl:definitions>