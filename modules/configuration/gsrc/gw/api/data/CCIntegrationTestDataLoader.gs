package gw.api.data

uses gw.api.database.spatial.SpatialPoint
uses gw.api.databuilder.ABAdjudicatorBuilder
uses gw.api.databuilder.ABAttorneyBuilder
uses gw.api.databuilder.ABAutoRepairShopBuilder
uses gw.api.databuilder.ABAutoTowingAgcyBuilder
uses gw.api.databuilder.ABCompanyBuilder
uses gw.api.databuilder.ABCompanyVendorBuilder
uses gw.api.databuilder.ABDoctorBuilder
uses gw.api.databuilder.ABLawFirmBuilder
uses gw.api.databuilder.ABMedicalCareOrgBuilder
uses gw.api.databuilder.ABPersonBuilder
uses gw.api.databuilder.ABPersonVendorBuilder
uses gw.api.databuilder.ABPolicyPersonBuilder
uses gw.api.databuilder.AddressBuilder
uses gw.api.databuilder.CredentialBuilder
uses gw.api.databuilder.EFTDataBuilder
uses gw.api.databuilder.UserBuilder
uses gw.api.databuilder.UserContactBuilder
uses gw.api.databuilder.UserSettingsBuilder
uses gw.api.system.ABLoggerCategory
uses org.slf4j.Logger
uses gw.api.databuilder.PendingContactUpdateBuilder
uses gw.api.upgrade.Coercions

@Export
class CCIntegrationTestDataLoader {
  private static var _logger = ABLoggerCategory.AB

//TODO(kmd) clean this up

  construct() {}

  private static function createABAutoRepairShop(name:String,
                                         address:Address,
                                         email:String,
                                         workPhone:String,
                                         primaryPhoneType:PrimaryPhoneType,
                                         taxId:String,
                                         faxPhone:String, 
                                         publicID : String ) {
    gw.transaction.Transaction.runWithNewBundle( \b -> {
      new ABAutoRepairShopBuilder()
            .withName(name)
            .withPublicId(publicID)
            .withPrimaryAddress(address)
            .withEmailAddress1(email)
            .withWorkPhone(workPhone)
            .withPrimaryPhoneType(primaryPhoneType)
            .withTaxID(taxId)
            .withFaxPhone(faxPhone)
            .withVendorType(typekey.VendorType.TC_AUTOREPAIR)
            .create(b)
    })
    
  }

  private static function createUser(userName:String, password:String, userContact:UserContact, org: Organization, groups:Group[], roles: String[]) : User {
    var cred = gw.api.database.Query.make(entity.Credential).compare("UserName", Equals, userName).select().AtMostOneRow
    if (cred == null) {
      var ub = new UserBuilder()
        .withContact( userContact )
        .withCredential( new CredentialBuilder().withUserName(userName).withPassword(password).create() )
        .withUserSettings(new UserSettingsBuilder().create())
      if (org != null) { 
        ub = ub.withOrganization( org )
      }
      for (group in groups) {
         ub.withGroup( group )
      }
      for (role in roles) {
        ub = ub.withRoleByPublicId( role )
      }
      return ub.createAndCommit()
    }
    return null
  }
  
  private static function createUserContact(firstName:String, lastName:String, address:Address, workPhonePrimary:Boolean, workPhone:String, email:String) : UserContact {
    var uc = gw.api.database.Query.make(entity.UserContact).compare("FirstName", Equals, firstName).compare("LastName", Equals, lastName).select().AtMostOneRow
    if (uc == null) {
      var builder =  new UserContactBuilder()
            .withFirstName(firstName)
            .withLastName(lastName)
            .withPrimaryAddress(address)
            .withWorkPhone(workPhone)
            .withEmailAddress1(email)
      if (workPhonePrimary) {
        builder.withPrimaryPhoneType(PrimaryPhoneType.TC_WORK)
      }
      return builder.createAndCommit()
    }
    return uc
  }

  public static function createPluginAuthUser() {
    // Create the ClientAppXC users for suite apps    
    var group = SampleGroup.Enigma.generate()
    var org = SampleOrganization.DefaultOrg.generate()
    var ccAppUser = createUserContact("ClientAppCC", "CC", null, false, null, null)
    var pcAppUser = createUserContact("ClientAppPC", "PC", null, false, null, null)
    var bcAppUser = createUserContact("ClientAppBC", "BC", null, false, null, null)
    createUser("ClientAppCC", "gw", ccAppUser, org, new Group[]{group}, new String[]{SystemRole.ClientApp.PublicId})
    createUser("ClientAppPC", "gw", pcAppUser, org, new Group[]{group}, new String[]{SystemRole.ClientApp.PublicId})
    createUser("ClientAppBC", "gw", bcAppUser, org, new Group[]{group}, new String[]{SystemRole.ClientApp.PublicId})
  }


  public static function createRelatedContactTestData() {
    
    new gw.api.databuilder.ABMedicalCareOrgBuilder()
            .withName("Bridgepointe Medical")
            .withMedicalOrgSpecialty(SpecialtyType.TC_FAMILYPRACTICE)
            .withTaxID()
            .withPublicId("abcc:1210")
            .createAndCommit()

    new ABDoctorBuilder()
                 .withDoctorSpecialty(TC_INTERNALMED)
                 .withFirstName("Samantha")
                 .withLastName("Andrews")
                 .withMedicalLicense("CA1234567")                              
                 .withPrimaryAddress(new gw.api.databuilder.AddressBuilder()
                 .withAddressLine1("1150 Santa Clara St.")
                 .withCountry(TC_US)
                 .withPostalCode("91006")
                 .withState(State.TC_CA)
                 .withCity("Arcadia"))
                 .withTaxID("999-99-9999")
                 .withPublicId("abcc:1107")
                 .withDateOfBirth(Coercions.makeDateFrom("1/1/1965"))
                 .createAndCommit()
  
  }

  private static function createABPolicyPerson(firstName:String, 
                                         lastName:String, 
                                         address:Address, 
                                         workPhone:String, 
                                         primaryPhoneType:PrimaryPhoneType, 
                                         taxId:String, 
                                         cellPhone:String) {
    gw.transaction.Transaction.runWithNewBundle( \b -> {
      new ABPolicyPersonBuilder()
            .withFirstName(firstName)
            .withLastName(lastName)
            .withPrimaryAddress(address)
            .withWorkPhone(workPhone)
            .withPrimaryPhoneType(primaryPhoneType)
            .withTaxID(taxId)
            .withCellPhone(cellPhone)
            .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})
            .create(b)
    })
  }

  static function createSampleData(logger : Logger) {
    
//    new DataSets().createDefaultSampleData(null)

    var abAddress49 = new AddressBuilder()
                        .withAddressType(AddressType.TC_HOME)
                        .withAddressLine1("345 Fir Lane")
                        .withCity("La Canada")
                        .withState(State.TC_CA)
                        .withPostalCode("91352")
                        .withCountry(Country.TC_US)
                        .create()
    abAddress49.setGeocodeFieldsFromLatLong(34.23540, -118.35310)                        
    
    var abAddress141 = new AddressBuilder()
                        .withAddressType(AddressType.TC_HOME)
                        .withAddressLine1("345 Fir Lane")
                        .withCity("La Canada")
                        .withState(State.TC_CA)
                        .withPostalCode("91352")
                        .withCountry(Country.TC_US)
                        .create()
    abAddress141.setGeocodeFieldsFromLatLong(34.23540, -118.35310)                        

    abAddress141.Bundle.commit()
    
    new ABPersonBuilder()
                .withFirstName("Donald")
                .withLastName("Sunflower")
                .withPrimaryAddress(abAddress49)
                .withWorkPhone("425-706-9995")
                .withCellPhone("661-831-7771")
                .withPrimaryPhoneType(PrimaryPhoneType.TC_WORK)
                .withTaxID("429-42-4380")
                .createAndCommit()
    createABPolicyPerson("Zela", "Sunflower", abAddress141, "425-706-9995", PrimaryPhoneType.TC_WORK, "123-84-7749", "661-831-7771")

    createPluginAuthUser()
        
    if(logger != null) {
      logger.warn("Creating sampledata")
    }

    var contactAb64 = new gw.api.databuilder.ABCompanyVendorBuilder()
      .withFaxPhone("530-899-6122")
      .withPrimaryPhoneType(TC_WORK)
      .withEmailAddress1("info@WalMart.com")
      .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("287 Kensington Rd. #1A")
        .withCountry(TC_US)
        .withPostalCode("91145")
        .withState(State.TC_CA)
        .withAddressType(TC_BUSINESS)
        .withCity("South Pasadena"))
      .withWorkPhone("425-706-9995")
      .withTaxID("88-4235984")
      .withName("United Natural Foods Inc")
      .createAndCommit()

    _logger.info("${contactAb64.DisplayName} has ABUID: ${contactAb64.LinkID}")
    
    var abAddress73 = new AddressBuilder()
                        .withAddressType(AddressType.TC_BUSINESS)
                        .withAddressLine1("198 Bush St")
                        .withCity("San Francisco")
                        .withState(State.TC_CA)
                        .withPostalCode("94104")
                        .withCountry(Country.TC_US)
                        .withLinkID("abcc:9010")
                        .withSpatialPoint(new SpatialPoint(-122.40070, 37.79110))
                        .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                        .createAndCommit()
    var abAddress74 = new AddressBuilder()
                        .withAddressType(AddressType.TC_BUSINESS)
                        .withAddressLine1("198 Sutter St")
                        .withCity("San Francisco")
                        .withState(State.TC_CA)
                        .withPostalCode("94108")
                        .withCountry(Country.TC_US)
                        .withSpatialPoint(new SpatialPoint(-122.40380, 37.78980))
                        .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                        .withLinkID("abcc:9011")
                        .createAndCommit()
    createABAutoRepairShop("Express Auto", abAddress73, "service@expressauto.com", "209-234-8728", PrimaryPhoneType.TC_WORK, "77-7752421", "209-234-8727", "abcc:9000")
    createABAutoRepairShop("European Autoworks", abAddress74, "service@europeanautoworks.com", "514-249-7396", PrimaryPhoneType.TC_WORK, "88-1529123", "514-249-7395", "abcc:9001")

    var homeAddress1 = new AddressBuilder()
                      .withAddressLine1("1 Grant Ave")
                      .withAddressLine2("#100")
                      .withCalifornia()
                      .withCity("San Francisco")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("94108")
                      .withLinkID("abcc:1001")
                      .withSpatialPoint(new SpatialPoint(-122.40840, 37.79090))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var homeAddress2 = new AddressBuilder()
                      .withAddressLine1("2 Grant St")
                      .withAddressLine2("#200")
                      .withCalifornia()
                      .withCity("San Jose")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("95110")
                      .withLinkID("abcc:1002")
                      .withSpatialPoint(new SpatialPoint(-121.88800, 37.32380))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var homeAddress3 = new AddressBuilder()
                      .withAddressLine1("3 South Grant St.")
                      .withAddressLine2("#300")
                      .withCalifornia()
                      .withCity("San Mateo")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("94401")
                      .withLinkID("abcc:1003")
                      .withSpatialPoint(new SpatialPoint(-122.32010, 37.57160))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()
                      
    var homeAddress4 = new AddressBuilder()
                      .withAddressLine1("4 Grant St")
                      .withAddressLine2("#200")
                      .withCalifornia()
                      .withCity("San Jose")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("95110")
                      .withLinkID("abcc:1004")
                      .withSpatialPoint(new SpatialPoint(-121.88800, 37.32380))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var homeAddress5 = new AddressBuilder()
                      .withAddressLine1("5 Grant St")
                      .withAddressLine2("#200")
                      .withCalifornia()
                      .withCity("San Jose")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("95110")
                      .withLinkID("abcc:1005")
                      .withSpatialPoint(new SpatialPoint(-121.88800, 37.32380))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var homeAddress6 = new AddressBuilder()
                      .withAddressLine1("25 Navy St")
                      .withAddressLine2("#31")
                      .withCalifornia()
                      .withCity("Foster City")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("94404")
                      .withLinkID("abcc:1341")
                      .withSpatialPoint(new SpatialPoint(-121.88800, 37.32380))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var workAddress1 = new AddressBuilder()
                      .withAddressLine1("1 Grant Ave")
                      .withAddressLine2("#100")
                      .withCalifornia()
                      .withCity("San Francisco")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("94108")
                      .withLinkID("abcc:1011")
                      .withSpatialPoint(new SpatialPoint(-122.40840, 37.79090))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var workAddress2 = new AddressBuilder()
                      .withAddressLine1("2 Grant St")
                      .withAddressLine2("#200")
                      .withCalifornia()
                      .withCity("San Jose")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("95110")
                      .withLinkID("abcc:1012")
                      .withSpatialPoint(new SpatialPoint(-121.88800, 37.32380))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var workAddress3 = new AddressBuilder()
                      .withAddressLine1("3 Grant Ave")
                      .withAddressLine2("#300")
                      .withCalifornia()
                      .withCity("San Luis Obispo")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("93420")
                      .withLinkID("abcc:1013")
                      .withSpatialPoint(new SpatialPoint(-120.54800, 35.07750))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

    var workAddress4 = new AddressBuilder()
                      .withAddressLine1("4 South Grant St")
                      .withAddressLine2("#400")
                      .withCalifornia()
                      .withCity("San Mateo")
                      .withCountry(typekey.Country.TC_US)
                      .withPostalCode("94401")
                      .withLinkID("abcc:1014")
                      .withSpatialPoint(new SpatialPoint(-122.32010, 37.57160))
                      .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                      .createAndCommit()

                                            
    var andy = new ABPersonBuilder()
                .withPrimaryAddress(homeAddress1)
                .withFirstName("Andy")
                .withLastName("Planck")
                .withSuffix(typekey.NameSuffix.TC_SR)
                .withPrefix(typekey.NamePrefix.TC_DR)
                .withTaxID("111-11-1111")
                .withHomePhone("510-555-1212")
                .withWorkPhone("925-555-1212")
                .withCellPhone("415-555-1212")
                .withEmailAddress1("info@guidewire.com")
                .withEmailAddress2("help@guidewire.com")
                .withFaxPhone("831-555-1212")
                .withPreferred(false)
                .withPreferredCurrency(typekey.Currency.TC_USD)
                .withTaxStatus(typekey.TaxStatus.TC_UNKNOWN)
                .withLicenseNumber("B1234567")
                .withLicenseState(typekey.Jurisdiction.TC_CA)
                .withMaritalStatus(typekey.MaritalStatus.TC_MARRIED)
                .withGender(typekey.GenderType.TC_M)
                .withNumDependents(1)
                .withOccupation("Engineer")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY}) 
                .withPublicId("abcc:1101")
                .createAndCommit()
                
    var al = new ABPersonBuilder()
                .withPrimaryAddress(homeAddress2)
                .withFirstName("Al")
                .withLastName("Planck")
                .withSuffix(typekey.NameSuffix.TC_JR)
                .withTaxID("222-22-2222")
                .withHomePhone("510-555-1212")
                .withWorkPhone("831-555-1212")
                .withCellPhone("415-555-1212")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})  
                .withDateOfBirth(Coercions.makeDateFrom("1/1/1970"))
                .withPublicId("abcc:1102")              
                .createAndCommit()
                
    var alyssa = new ABPersonBuilder()
                .withPrimaryAddress(homeAddress4)
                .withFirstName("Alyssa")
                .withLastName("Planck")
                .withTaxID("222-22-2223")
                .withHomePhone("510-555-1212")
                .withWorkPhone("831-555-1213")
                .withCellPhone("415-555-1212")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})  
                .withDateOfBirth(Coercions.makeDateFrom("1/1/1970"))
                .withPublicId("abcc:1103")              
                .create()

    var alice = new ABPersonBuilder()
                .withPrimaryAddress(homeAddress5)
                .withFirstName("Alice")
                .withLastName("Planck")
                .withTaxID("222-22-2224")
                .withHomePhone("510-555-1212")
                .withWorkPhone("831-555-1214")
                .withCellPhone("415-555-1212")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLIENT})  
                .withDateOfBirth(Coercions.makeDateFrom("1/1/1970"))
                .withPublicId("abcc:1104")              
                .create()

    var victor = new ABPersonBuilder()
        .withPrimaryAddress(homeAddress6)
        .withFirstName("Victor")
        .withLastName("Cruz")
        .withTaxID("987-22-1234")
        .withHomePhone("650-555-3415")
        .withWorkPhone("650-555-2281")
        .withCellPhone("650-555-6901")
        .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})
        .withDateOfBirth(Coercions.makeDateFrom("1/1/1984"))
        .withPendingChange(PendingContactUpdateBuilder.PendingUpdateClaim())
        .withCreateStatus(typekey.ContactCreationApprovalStatus.TC_PENDING_APPROVAL)
        .withPublicId("abcc:1919")
        .create()

    createRelatedContactTestData()

    new ABAttorneyBuilder()
                 .withAttorneySpecialty(typekey.LegalSpecialty.TC_GENERALLIABILITY)
                 .withAttorneyLicense("CA12345678")
                 .withFirstName("Samantha")
                 .withLastName("Andrews")
                 .withDateOfBirth(Coercions.makeDateFrom("1/1/1965"))
                 .withTaxID("999-99-9998")
                 .createAndCommit()

    new ABPersonBuilder()
                .withPrimaryAddress(
                  new AddressBuilder()
                          .asHomeAddress()
                          .withAddressLine1("324 sdafasdf")
                          .withCity("fsdgsg")
                          .withState(State.TC_AK)
                          .withPostalCode("22222")
                )
                .withFirstName("Kay")
                .withLastName("Smith")
                .withTaxID("555-25-3562")
                .withHomePhone("831-555-2431")
                .withWorkPhone("408-555-3456")
                .withCellPhone("707-212-1235")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})
                .withDateOfBirth(Coercions.makeDateFrom("4/4/1980"))
                .withPublicId("abcc:1150")
                .createAndCommit()

    new ABPersonBuilder()
                .withPrimaryAddress(
                  new AddressBuilder()
                          .asHomeAddress()
                          .withAddressLine1("324 sdfgafasdf")
                          .withCity("fsdgsadfasg")
                          .withState(State.TC_AL)
                          .withPostalCode("21222")
                )
                .withFirstName("Bob")
                .withLastName("Smith")
                .withTaxID("555-25-6754")
                .withHomePhone("831-555-1335")
                .withWorkPhone("408-555-5674")
                .withCellPhone("707-555-3354")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})
                .withDateOfBirth(Coercions.makeDateFrom("2/1/1974"))
                .withPublicId("abcc:1151")
                .createAndCommit()

    new ABPersonBuilder()
                .withPrimaryAddress(
                  new AddressBuilder()
                          .asHomeAddress()
                          .withAddressLine1("324 sdafasdf")
                          .withCity("fsdgsg")
                          .withState(State.TC_AK)
                          .withPostalCode("22222")
                )
                .withFirstName("Billy")
                .withLastName("Smith")
                .withTaxID("555-25-3562")
                .withHomePhone("831-555-2431")
                .withWorkPhone("408-555-3456")
                .withCellPhone("707-555-1235")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})
                .withDateOfBirth(Coercions.makeDateFrom("12/5/1981"))
                .withPublicId("abcc:1152")
                .createAndCommit()

    new ABPersonBuilder()
                .withPrimaryAddress(
                  new AddressBuilder()
                          .asHomeAddress()
                          .withAddressLine1("324 sdfgafasdf")
                          .withCity("fsdgsadfasg")
                          .withState(State.TC_AL)
                          .withPostalCode("21222")
                )
                .withFirstName("Jenn")
                .withLastName("Smith")
                .withTaxID("555-25-6754")
                .withHomePhone("831-555-1335")
                .withWorkPhone("408-555-5674")
                .withCellPhone("707-555-3354")
                .withTags(new ContactTagType[]{ContactTagType.TC_CLAIMPARTY})
                .withDateOfBirth(Coercions.makeDateFrom("5/3/1982"))
                .withPublicId("abcc:1153")
                .createAndCommit()

    var contact9 = new gw.api.databuilder.ABCompanyBuilder()
      .withName("Planck Construction")
      .withPublicId("abcc:1200")
      .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("1150 Santa Clara St.")
        .withCountry(TC_US)
        .withPostalCode("91006")
        .withState(State.TC_CA)
        .withCity("Arcadia"))
      .withWorkPhone("818-446-1206")
      .withTaxID("987-65-4300")
      .withAddress(workAddress1)
      .create()

    var contact10 = new gw.api.databuilder.ABCompanyBuilder()
      .withName("Planck Windows")
      .withPublicId("abcc:1201")
      .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("1150 Santa Clara St.")
        .withCountry(TC_US)
        .withPostalCode("91006")
        .withState(State.TC_CA)
        .withCity("Arcadia"))
      .withWorkPhone("818-446-1207")
      .withTaxID("987-65-4301")
      .create()

    var contact11 = new gw.api.databuilder.ABCompanyBuilder()
            .withName("Planck Painting")
            .withPublicId("abcc:1202")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("1150 Santa Clara St.")
              .withCountry(TC_US)
              .withPostalCode("91006")
              .withState(State.TC_CA)
              .withCity("Arcadia"))
            .withWorkPhone("818-446-1208")
            .withTaxID("987-65-4301")
            .create()

    var contact108 = new gw.api.databuilder.ABAttorneyBuilder()
            .withFirstName("Sam")
            .withLastName("Adams")
            .withAttorneyLicense("12345678")
            .withAttorneySpecialty(typekey.LegalSpecialty.TC_GENERALLIABILITY)
            .withAddress(workAddress2)
            .withTaxID("111-22-3333")
            .createAndCommit()    
            
    new gw.api.databuilder.ABAutoTowingAgcyBuilder()
            .withName("Towers Inc")
            .withAddress(workAddress3)
            .withTaxID("111-22-4444")
            .withVendorType(typekey.VendorType.TC_TOWINGSERVICE)
            .withWorkPhone("650-555-1212")
            .createAndCommit()
            
    new gw.api.databuilder.ABAutoRepairShopBuilder()
            .withName("Auto Repair Inc")
            .withAddress(workAddress4)
            .withTaxID("111-22-5555")
            .withVendorType(typekey.VendorType.TC_AUTOREPAIR)
            .withWorkPhone("818-555-1212")
            .createAndCommit()
            
    var adjudicator = new gw.api.databuilder.ABAdjudicatorBuilder()
            .withFirstName("Steven")
            .withLastName("Bryant")
            .withPublicId("abcc:1203")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("1710 S Amphlett Boulevard")
                    .withAddressLine2("Suite 306")
                    .withCalifornia()
                    .withCity("San Mateo")
                    .withCountry(typekey.Country.TC_US)
                    .withPostalCode("94402")
                    .withSpatialPoint(new SpatialPoint(-122.3030, 37.5600))
                    .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                    .create())
            .withWorkPhone("650-527-1210")
            .withTaxID("111-22-6666")
            .withAdjudicativeDomain(AdjudicativeDomain.TC_APPEALS)
            .withAdjudicatorLicense("AD7654321")
            .withEFTRecord(new gw.api.databuilder.EFTDataBuilder()
                    .withUniqueDataAndBankAccountTypeAndPrimary(BankAccountType.TC_CHECKING, true)
                    .create())
            .withEFTRecord(new gw.api.databuilder.EFTDataBuilder()
                    .withUniqueDataAndBankAccountTypeAndPrimary(BankAccountType.TC_SAVINGS, false)
                    .create())                    
            .createAndCommit()
    
    new gw.api.databuilder.ABLegalVenueBuilder()
            .withName("San Mateo City Hall")
            .withPublicId("abcc:1204")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("630 N San Mateo Drive")
                    .withCalifornia()
                    .withCity("San Mateo")
                    .withCountry(typekey.Country.TC_US)
                    .withPostalCode("94401")
                    .withSpatialPoint(new SpatialPoint(-122.3352, 37.5746))
                    .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                    .create())
            .createAndCommit()
    
    new gw.api.databuilder.ABPlaceBuilder()
            .withName("San Mateo Central Park")
            .withPublicId("abcc:1205")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("901 S El Camino Real")
                    .withCalifornia()
                    .withCity("San Mateo")
                    .withCountry(typekey.Country.TC_US)
                    .withPostalCode("94402")
                    .withSpatialPoint(new SpatialPoint(-122.3218, 37.5592))
                    .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                    .create())
            .createAndCommit()

    new gw.api.databuilder.ABPolicyCompanyBuilder()
            .withName("San Mateo PC")
            .withPublicId("abcc:1206")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("One Waters Park Drive")
                    .withAddressLine2("Suite 180")
                    .withCalifornia()
                    .withCity("San Mateo")
                    .withCountry(typekey.Country.TC_US)
                    .withPostalCode("94403")
                    .withSpatialPoint(new SpatialPoint(-122.2901, 37.5518))
                    .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                    .create())
            .createAndCommit()
    
    var vendorPerson = new gw.api.databuilder.ABPersonVendorBuilder()
            .withFirstName("Bryan")
            .withLastName("Smith")
            .withMiddleName("A.")
            .withSuffix(typekey.NameSuffix.TC_JR)
            .withPrefix(typekey.NamePrefix.TC_MR)
            .withPublicId("abcc:1207")
            .withDateOfBirth(Coercions.makeDateFrom("10/11/1970"))
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("214 De Anza Boulevard")
                    .withCalifornia()
                    .withCity("San Mateo")
                    .withCountry(typekey.Country.TC_US)
                    .withPostalCode("94402")
                    .withSpatialPoint(new SpatialPoint(-122.3376, 37.5199))
                    .withGeocodeStatus(typekey.GeocodeStatus.TC_EXACT)
                    .withAddressType(AddressType.TC_BUSINESS)
                    .withDescription("Test Data")
                    .create())
            .withWorkPhone("650-357-1200")
            .withHomePhone("650-357-1210")
            .withCellPhone("650-357-1220")
            .withFaxPhone("650-357-1230")
            .withPrimaryPhoneType(typekey.PrimaryPhoneType.TC_WORK)
            .withTaxID("111-22-7777")
            .withVendorType(VendorType.TC_BLDINGCONTRACTOR)
            .withPreferred(true)
            .withScore(80)
            .withEmailAddress1("info@guidewire.com")
            .withEmailAddress2("help@guidewire.com")
            .createAndCommit()
    
    new gw.api.databuilder.ABLawFirmBuilder()
            .withName("GW Law Firm")
            .withLawFirmSpecialty(typekey.LegalSpecialty.TC_PERSONALINJURY)
            .withTaxID()
            .createAndCommit()
 
    new gw.api.databuilder.ABMedicalCareOrgBuilder()
            .withName("San Mateo Health")
            .withMedicalOrgSpecialty(SpecialtyType.TC_FAMILYPRACTICE)
            .withTaxID()
            .createAndCommit()
                             
    contact9.addContactByRelationship(ContactBidiRel.TC_EMPLOYEE, andy)
    contact9.addContactByRelationship(ContactBidiRel.TC_EMPLOYEE, alice)
    contact9.addContactByRelationship(ContactBidiRel.TC_EMPLOYEE, alyssa)
    
    contact9.addContactByRelationship(ContactBidiRel.TC_CASE, alice)
    contact9.addContactByRelationship(ContactBidiRel.TC_THIRDPARTYINSURED, alyssa)
    
    contact9.addContactByRelationship(ContactBidiRel.TC_PRIMARYCONTACT, andy)
    contact10.addContactByRelationship(ContactBidiRel.TC_PRIMARYCONTACT, andy)
    contact11.addContactByRelationship(ContactBidiRel.TC_PRIMARYCONTACT, andy)
      
    andy.addContactByRelationship(ContactBidiRel.TC_WARD, al)
    al.addContactByRelationship(ContactBidiRel.TC_EMPLOYER, contact11)
    al.addContactByRelationship(ContactBidiRel.TC_PRIMARYCONTACT, vendorPerson)
    
    adjudicator.addContactByRelationship(ContactBidiRel.TC_EMPLOYER, contact10)
    adjudicator.addContactByRelationship(ContactBidiRel.TC_GUARDIAN, contact108)
 
    contact9.Bundle.commit()

    andy.Bundle.commit()
    al.Bundle.commit()
    alice.Bundle.commit()
    alyssa.Bundle.commit()
    contact10.Bundle.commit()
    contact11.Bundle.commit()
    adjudicator.Bundle.commit()
    
    new ABPersonBuilder()
            .withFirstName("Stan")
            .withLastName("Bohr")
            .withTaxID("123-45-6789")
            .createAndCommit()
            
    new ABPersonBuilder()
            .withFirstName("Stan")
            .withLastName("Bohr")
            .withAddress(homeAddress3)
            .withDateOfBirth(Coercions.makeDateFrom("1/1/1960"))
            .createAndCommit()

    new ABPersonBuilder()
            .withFirstName("Stan")
            .withLastName("Bohr")
            .withDateOfBirth(Coercions.makeDateFrom("1/1/1960"))
            .withHomePhone("650-555-1212")
            .createAndCommit()

    new ABPersonBuilder()
            .withFirstName("Alex")
            .withLastName("Bohr")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("1150 Santa Clara St.")
              .withCountry(TC_US)
              .withPostalCode("91006")
              .withState(State.TC_CA)
              .withCity("Arcadia"))
            .withWorkPhone("818-446-1208")
            .createAndCommit()
           
    new ABPersonBuilder()
            .withFirstName("Alex")
            .withLastName("Bohr")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("1150 Santa Clara St.")
              .withCountry(TC_US)
              .withPostalCode("91006")
              .withState(State.TC_CA)
              .withCity("Arcadia"))
            .withWorkPhone("818-446-1207")
            .createAndCommit()

    new ABPersonBuilder()
            .withFirstName("Alex")
            .withLastName("Bohr")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("1150 Santa Clara St.")
              .withCountry(TC_US)
              .withPostalCode("91006")
              .withState(State.TC_CA)
              .withCity("Arcadia"))
            .withWorkPhone("818-446-1206")
            .createAndCommit()

    new ABCompanyBuilder()
            .withName("Bohr Painting")
            .withTaxID("99-9876543")
            .withWorkPhone("818-555-1206")
            .createAndCommit()

    new ABCompanyBuilder()
            .withName("Bohr Painting")
            .withTaxID("99-9876543")
            .withWorkPhone("818-555-1207")
            .createAndCommit()

    new ABCompanyBuilder()
            .withName("Bohr Painting")
            .withTaxID("99-9876543")
            .withWorkPhone("818-555-1208")
            .createAndCommit()

    new ABCompanyBuilder()
            .withName("Feynman Company")
            .withTaxID("00-0000001")
            .createAndCommit()
            
    new ABCompanyVendorBuilder()
            .withName("Feynman CompanyVendor")
            .withTaxID("00-0000001")
            .createAndCommit()
            
    new ABAutoRepairShopBuilder()
            .withName("Feynman AutoRepair")
            .withTaxID("00-0000001")
            .createAndCommit()
            
    new ABAutoTowingAgcyBuilder()
            .withName("Feynman AutoTowingAgcy")
            .withTaxID("00-0000001")
            .createAndCommit()
            
    new ABLawFirmBuilder()
            .withName("Feynman LawFirm")
            .withTaxID("00-0000001")
            .createAndCommit()
            
    new ABMedicalCareOrgBuilder()
            .withName("Feynman MedicalCareOrg")
            .withTaxID("00-0000001")
            .createAndCommit()
            
    new ABPersonBuilder()
            .withFirstName("Person")
            .withLastName("Feynman")
            .withTaxID("000-00-0001")
            .createAndCommit()
    
    new ABAdjudicatorBuilder()
            .withFirstName("Adjudicator")
            .withLastName("Feynman")
            .withTaxID("000-00-0001")
            .createAndCommit()
    
    new ABPersonVendorBuilder()
            .withFirstName("PersonVendor")
            .withLastName("Feynman")
            .withTaxID("000-00-0001")
            .createAndCommit()
    
    new ABDoctorBuilder()
            .withFirstName("Doctor")
            .withLastName("Feynman")
            .withTaxID("000-00-0001")
            .createAndCommit()
    
    new ABAttorneyBuilder()
            .withFirstName("Attorney")
            .withLastName("Feynman")
            .withTaxID("000-00-0001")
            .createAndCommit()
    
    new ABPersonBuilder() 
            .withFirstName("Delete")
            .withLastName("Me")
            .withTaxID("101-00-1010")
            .withPublicId("abcc:1300")
            .createAndCommit()        
    
    // needed for smoke tests
    new ABCompanyBuilder()
            .withName("Albertson's")
            .withTaxID("54-0683626")            
            .withFaxPhone("361-653-8333")
            .withPublicId("abcc:61")
            .withPrimaryPhoneType(TC_WORK)
            .withEmailAddress1("info@Albertsons.com")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("345 Fir Lane")
              .withCountry(TC_US)
              .withPostalCode("91352")
              .withState(State.TC_CA)
              .withAddressType(TC_BUSINESS)
              .withCity("La Canada"))
            .withWorkPhone("832-660-5573")
            .createAndCommit()
            
    new gw.api.databuilder.ABLegalVenueBuilder()
            .withName("Guidewire Legal Venue")
            .withPublicId("abcc:4444")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("2211 Bridgepointe")
                    .withAddressLine2("")
                    .withCalifornia()
                    .withCity("San Mateo")
                    .withCountry(typekey.Country.TC_US)
                    .withPostalCode("94401")
                    .create())            
            .createAndCommit()

    new gw.api.databuilder.ABPlaceBuilder()
            .withName("Some Place")
            .withPublicId("abcc:4445")
            .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("1234 Nowhere")
                    .withAddressLine2("")
                    .withCalifornia()
                    .withCity("San Mateo")
                    .withCountry(typekey.Country.TC_US)
                    .withPostalCode("94401")
                    .create())
            .createAndCommit()
            
            
    new gw.api.databuilder.ABPersonBuilder()
            .withFirstName("Robert")
            .withLastName("Boyle")   
            .withTaxID("999-00-9090")
            .withPublicId("abcc:1500")
            .withAddress(new AddressBuilder().withAddressLine1("1 First St"))
            .withAddress(new AddressBuilder().withAddressLine1("2 Second St"))
            .withAddress(new AddressBuilder().withAddressLine1("3 Third St"))
            .withEFTRecord(new EFTDataBuilder().withUniqueDataAndBankAccountTypeAndPrimary(BankAccountType.TC_CHECKING, false))
            .withEFTRecord(new EFTDataBuilder().withUniqueDataAndBankAccountTypeAndPrimary(BankAccountType.TC_SAVINGS, false))
            .withEFTRecord(new EFTDataBuilder().withUniqueDataAndBankAccountTypeAndPrimary(BankAccountType.TC_OTHER, false))
            .createAndCommit()     
            
    new gw.api.databuilder.ABCompanyVendorBuilder()
            .withPublicId("abcc:1501")
            .withName("Boyle Glass")
            .withTaxID("99-9119090")
            .withAddress(new AddressBuilder().withAddressLine1("4 Fourth Ave"))
            .withABContactCategoryScore(new gw.api.databuilder.ABContactCategoryScoreBuilder()
                .withReviewCategory(ReviewCategory.TC_ACCURACY)
                .withScore(10)
                .create())
            .withABContactCategoryScore(new gw.api.databuilder.ABContactCategoryScoreBuilder()
                .withReviewCategory(ReviewCategory.TC_ADJUSTER)
                .withScore(20)
                .create())
            .withABContactCategoryScore(new gw.api.databuilder.ABContactCategoryScoreBuilder()
                .withReviewCategory(ReviewCategory.TC_COMMUNICATION)
                .withScore(30)
                .create())
            .withABContactCategoryScore(new gw.api.databuilder.ABContactCategoryScoreBuilder()
                .withReviewCategory(ReviewCategory.TC_GENERAL)
                .withScore(40)
                .create())
            .withABContactCategoryScore(new gw.api.databuilder.ABContactCategoryScoreBuilder()
                .withReviewCategory(ReviewCategory.TC_OFFICESTAFF)
                .withScore(50)
                .create())
            .withABContactCategoryScore(new gw.api.databuilder.ABContactCategoryScoreBuilder()
                .withReviewCategory(ReviewCategory.TC_QUALITY)
                .withScore(60)
                .create())
            .createAndCommit()


    var ernestWalton = new gw.api.databuilder.ABPersonBuilder()
            .withFirstName("Ernest")
            .withLastName("Walton")   
            .withTaxID("999-00-9191")
            .withPublicId("abcc:1502")
            .createAndCommit()     

    var samWalton = new gw.api.databuilder.ABPersonBuilder()
            .withFirstName("Sam")
            .withLastName("Walton")   
            .withTaxID("999-00-9191")
            .withPublicId("abcc:1503")
            .createAndCommit()     

    ernestWalton.addContactByRelationship(ContactBidiRel.TC_WARD, samWalton)
    ernestWalton.Bundle.commit()
    
    new gw.api.databuilder.ABPersonBuilder()
            .withFirstName("John")
            .withLastName("Walton")   
            .withTaxID("999-00-9292")
            .withPublicId("abcc:1504")
            .createAndCommit()     

    new gw.api.databuilder.ABPersonBuilder()
            .withFirstName("Mary")
            .withLastName("Walton")   
            .withTaxID("999-00-9393")
            .withPublicId("abcc:1505")
            .createAndCommit()     

    
    new gw.api.databuilder.ABPersonBuilder()
            .withPublicId("abcc:1506")
            .withFirstName("Client")
            .withLastName("User")
            .withTags(new ContactTagType[]{ContactTagType.TC_CLIENT})  
            .withTaxID("999-00-1506")
            .createAndCommit()

    new gw.api.databuilder.ABPersonBuilder()
            .withPublicId("abcc:1507")
            .withFirstName("Herbert")
            .withLastName("Hoover")
            .withTags(new ContactTagType[]{ContactTagType.TC_CLIENT})
            .withTaxID("555-55-1111")
            .createAndCommit()

    new gw.api.databuilder.ABPersonBuilder()
            .withPublicId("abcc:1508")
            .withFirstName("Woodrow")
            .withLastName("Wilson")
            .withTags(new ContactTagType[]{ContactTagType.TC_CLIENT})
            .withTaxID("555-55-1112")
            .createAndCommit()


                
    var pVendor = new gw.api.databuilder.ABPersonVendorBuilder()
            .withPublicId("abcc:1510")
            .withFirstName("Person")
            .withLastName("Vendor")
            .withTaxID("999-00-1510")
            .withTags(new ContactTagType[]{ContactTagType.TC_VENDOR}) 
            .withVendorAvailability(VendorAvailabilityType.TC_AVAILABLE)
            .createAndCommit()

    var cVendor = new gw.api.databuilder.ABCompanyVendorBuilder()
            .withPublicId("abcc:1511")
            .withName("Company Vendor")
            .withTaxID("999-00-1511")
            .withTags(new ContactTagType[]{ContactTagType.TC_VENDOR}) 
            .withVendorAvailability(VendorAvailabilityType.TC_AVAILABLE)
            .createAndCommit()

    var pContact = new gw.api.databuilder.ABPersonBuilder()
            .withPublicId("abcc:1512")
            .withFirstName("Primary")
            .withLastName("Contact")
            .withTaxID("999-00-1512")
            .withTags(new ContactTagType[]{ContactTagType.TC_VENDOR}) 
            .withVendorAvailability(VendorAvailabilityType.TC_UNAVAILABLE)
            .withVendorUnavailableMessage("Gone fishin'")
            .createAndCommit()
    
    gw.transaction.Transaction.runWithNewBundle(\ bundle -> {
      pVendor = bundle.add(pVendor)
      cVendor = bundle.add(cVendor)
      pContact = bundle.add(pContact)
      pVendor.PrimaryContact = pContact
      cVendor.PrimaryContact = pContact  
    })


    var clientPerson =  new gw.api.databuilder.ABPersonBuilder()
            .withPublicId("abcc:1515")
            .withFirstName("Brian")
            .withLastName("Wilson")
           .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("2 Grant St")
              .withAddressLine2("#700")
              .withCountry(TC_US)
              .withPostalCode("95110")
              .withState(State.TC_CA)
              .withCity("San Jose"))
             .withTags(new ContactTagType[]{ContactTagType.TC_CLIENT})
            .withTaxID("555-55-1113")
            .createAndCommit()

    var clientGuardian =  new gw.api.databuilder.ABPersonBuilder()
            .withPublicId("abcc:1516")
            .withFirstName("Murry")
            .withLastName("Wilson")
           .withPrimaryAddress( new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("2 Grant St")
              .withAddressLine2("#800")
              .withCountry(TC_US)
              .withPostalCode("95110")
              .withState(State.TC_CA)
              .withCity("San Jose"))
             .withTags(new ContactTagType[]{ContactTagType.TC_CLIENT})
            .withTaxID("555-55-1113")
            .createAndCommit()


    var clientCompany =  new gw.api.databuilder.ABCompanyBuilder()
            .withPublicId("abcc:1517")
            .withName("Wilson Sports")
            .withTags(new ContactTagType[]{ContactTagType.TC_CLIENT})
            .withTaxID("55-5551114")
            .createAndCommit()

    gw.transaction.Transaction.runWithNewBundle(\ bundle -> {
      clientPerson = bundle.add(clientPerson)
      clientCompany = bundle.add(clientCompany)
      clientPerson.Employer = clientCompany  
      clientPerson.Guardian = clientGuardian
    })
               
    if(logger != null) {
      logger.warn("done creating data, ${andy.DisplayName} is ${andy.LinkID}, ${al.DisplayName} is ${al.LinkID}")
    }
  }

}
