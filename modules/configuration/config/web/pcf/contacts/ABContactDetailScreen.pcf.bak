<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Screen
    id="ABContactDetailScreen">
    <Require
      name="contact"
      type="ABContact"/>
    <Require
      name="canPick"
      type="Boolean"/>
    <Require
      name="isReadOnly"
      type="boolean"/>
    <Require
      name="selectDocumentsCardByDefault"
      type="boolean"/>
    <Variable
      initialValue="new gw.web.ContactDetailsVendorHelper(contact)"
      name="contactDetailsVendorHelper"
      type="gw.web.ContactDetailsVendorHelper"/>
    <Variable
      initialValue="new gw.web.ContactDocumentsActionsHelper(contact)"
      name="contactDocumentsHelper"
      type="gw.web.ContactDocumentsActionsHelper"/>
    <Variable
      initialValue="false"
      name="showInactiveService"
      type="boolean"/>
    <Variable
      initialValue="contactDocumentsHelper.DocumentContentServerAvailable"
      name="contentActionsEnabled"
      type="boolean"/>
    <Variable
      initialValue="contactDocumentsHelper.isDocumentContentActionsAvailable()"
      name="contentActionsAvailable"
      recalculateOnRefresh="true"
      type="boolean"/>
    <Variable
      initialValue="contactDocumentsHelper.isDocumentMetadataActionsAvailable()"
      name="metadataActionsEnabled"
      recalculateOnRefresh="true"
      type="boolean"/>
    <Toolbar/>
    <AlertBar
      id="ContactDeletedAlert"
      label="DisplayKey.get(&quot;Web.ContactDetail.RetiredMessage&quot;)"
      visible="contact.isRetired()"/>
    <AlertBar
      id="LossOfServicesWarning"
      label="DisplayKey.get(&quot;Web.ContactDetail.Services.LossOfServicesWarning&quot;)"
      visible="contactDetailsVendorHelper.ShowLossOfServicesWarning"/>
    <AlertBar
      id="LossOfDocumentsWarning"
      label="DisplayKey.get(&quot;Web.ContactDetail.Documents.LossOfDocumentsWarning&quot;)"
      visible="contactDocumentsHelper.isShowLossOfDocumentsWarning(CurrentLocation.InEditMode)"/>
    <CardViewPanel>
      <Card
        id="ContactBasicsCard"
        title="DisplayKey.get(&quot;Web.ContactDetail.PageLinks.Basics&quot;)">
        <PanelRef
          def="ContactBasicsDV(contact)"
          mode="contact.Subtype">
          <Toolbar
            visible="!contact.isRetired()">
            <EditButtons
              editVisible="!isReadOnly"
              pickValue="canPick ? contact : null"
              showUpdateConfirmMessage="contactDetailsVendorHelper.ShowLossOfServicesWarning"
              updateConfirmMessage="DisplayKey.get(&quot;Web.ContactDetail.Services.LossOfServicesAlert&quot;)"/>
            <ToolbarDivider
              hideIfEditable="true"/>
            <ToolbarButton
              action="gw.api.web.contact.ABContactUtil.deleteContact(contact, CurrentLocation)"
              confirmMessage="DisplayKey.get(&quot;Web.ContactDetail.Delete.Warning&quot;)"
              hideIfEditable="true"
              id="ABContactDetailScreen_DeleteButton"
              label="DisplayKey.get(&quot;Web.ContactDetail.Delete&quot;)"
              shortcut="L"
              visible="perm.ABContact.delete(contact) &amp;&amp; !isReadOnly"/>
          </Toolbar>
        </PanelRef>
      </Card>
      <Card
        id="AddressesCard"
        title="DisplayKey.get(&quot;Web.ContactDetail.PageLinks.Addresses&quot;)"
        visible="!(contact typeis ABPlace)">
        <ListDetailPanel
          selectionName="selectedAddress"
          selectionType="Address">
          <PanelRef
            def="ABAddressesLV(contact)">
            <Toolbar
              visible="!contact.isRetired()">
              <EditButtons
                editVisible="!isReadOnly"
                pickValue="canPick ? contact : null"
                showUpdateConfirmMessage="contactDetailsVendorHelper.ShowLossOfServicesWarning"
                updateConfirmMessage="DisplayKey.get(&quot;Web.ContactDetail.Services.LossOfServicesAlert&quot;)"/>
              <ToolbarDivider/>
              <IteratorButtons
                iterator="ABAddressesLV.ABAddressesLV"/>
              <ToolbarDivider/>
              <ToolbarButton
                hideIfReadOnly="true"
                id="ABContactDetailScreen_RefreshButton"
                label="DisplayKey.get(&quot;Button.Refresh&quot;)"/>
            </Toolbar>
          </PanelRef>
          <CardViewPanel>
            <Card
              id="AddressDetailCard"
              title="DisplayKey.get(&quot;Web.ContactDetail.AddressDetail&quot;)">
              <PanelRef
                def="ABAddressDetailDV(selectedAddress)"/>
            </Card>
          </CardViewPanel>
        </ListDetailPanel>
      </Card>
      <Card
        id="DocumentsCard"
        selectOnEnter="selectDocumentsCardByDefault"
        title="DisplayKey.get(&quot;Web.ContactDetail.Documents.DocumentCardTitle&quot;)"
        visible="contactDocumentsHelper.ShowDocumentsTabForContact">
        <PanelRef>
          <Verbatim
            id="ContentSourceDisabledWarning"
            label="DisplayKey.get(&quot;Web.ContactDetail.Documents.DocumentManagementSystem.ContentPlugin.Disabled&quot;)"
            labelStyleClass="alertBarCustom"
            visible="not contactDocumentsHelper.ContentSourceEnabled"/>
          <PanelSet>
            <Verbatim
              id="ContentSourceUnavailableWarning"
              label="DisplayKey.get(&quot;Web.ContactDetail.Documents.DocumentManagementSystem.ContentPlugin.Unavailable&quot;)"
              labelStyleClass="alertBarCustom"
              visible="contactDocumentsHelper.ContentSourceEnabled and not contentActionsEnabled"/>
          </PanelSet>
        </PanelRef>
        <PanelSet>
          <Verbatim
            id="MetadataSourceUnavailableWarning"
            label="DisplayKey.get(&quot;Web.ContactDetail.Documents.DocumentManagementSystem.MetadataPlugin.Unavailable&quot;)"
            labelStyleClass="alertBarCustom"
            visible="contactDocumentsHelper.MetadataSourceEnabled and not contactDocumentsHelper.DocumentMetadataServerAvailable"/>
        </PanelSet>
        <PanelRef>
          <Toolbar
            id="ContactDocumentsLV_tb">
            <ToolbarButton
              id="AddDocuments"
              label="DisplayKey.get(&quot;Web.ContactDetail.Documents.NewDocument&quot;)"
              visible="perm.Document.create and !isReadOnly">
              <MenuItem
                action="IndicateExistenceDocumentWorksheet.goInWorkspace(contact)"
                available="metadataActionsEnabled"
                hideIfDisabled="false"
                id="IndicateExistence"
                label="DisplayKey.get(&quot;Web.ContactDetail.Documents.NewDocument.IndicateExistence&quot;)"/>
              <MenuItem
                action="AttachDocumentWorksheet.goInWorkspace(contact)"
                available="contentActionsAvailable and metadataActionsEnabled"
                hideIfDisabled="false"
                id="AttachDocument"
                label="DisplayKey.get(&quot;Web.ContactDetail.Documents.NewDocument.UploadDocuments&quot;)"
                visible="contactDocumentsHelper.ContentSourceEnabled"/>
            </ToolbarButton>
            <CheckedValuesToolbarButton
              allCheckedRowsAction="contact.unlinkDocumentsForUI(CheckedValues)"
              available="metadataActionsEnabled"
              confirmMessage="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions.Delete.Confirm&quot;)"
              flags="all CanDeleteDocument"
              id="RemoveDocuments"
              iterator="DocumentsLinkIterator"
              label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions.Delete&quot;)"
              tooltip="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions.Delete.Label&quot;)"
              visible="perm.System.docdelete and !isReadOnly"/>
            <ToolbarButton
              action="null"
              available="contentActionsAvailable"
              id="RefreshAsyncContent"
              label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions.AsynchronousRefresh&quot;)"
              tooltip="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions.AsynchronousRefresh.Tooltip&quot;)"
              visible="contactDocumentsHelper.isShowAsynchronousRefreshAction(contact.Documents)"/>
          </Toolbar>
          <ListViewPanel
            id="ContactDocumentsLV">
            <Variable
              initialValue="new gw.ab.document.ContactDocumentsFilterSet()"
              name="filterSet"
              type="gw.ab.document.ContactDocumentsFilterSet"/>
            <RowIterator
              canPick="false"
              editable="false"
              elementName="document"
              hasCheckBoxes="true"
              id="DocumentsLinkIterator"
              value="contact.Documents"
              valueType="entity.Document[]">
              <ToolbarFilter
                id="DocumentsFilter"
                name="DocumentsLinkFilter">
                <ToolbarFilterOptionGroup
                  filters="filterSet.ContactDocumentsFilters.FilterOptions"/>
              </ToolbarFilter>
              <ToolbarFlag
                condition="perm.Document.delete(document) and document.Status != DocumentStatusType.TC_FINAL and document.PendingDocUID == null "
                name="CanDeleteDocument"/>
              <Row>
                <BooleanRadioCell
                  icon="document.Icon"
                  iconType="svgFileName"
                  id="Icon"
                  showHeaderIcon="false"
                  value="true"
                  valueType="boolean"/>
                <LinkCell
                  id="Name"
                  label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Name&quot;)"
                  sortBy="document.Name"
                  sortOrder="2">
                  <Link
                    action="document.downloadContent()"
                    download="inline"
                    available="contactDocumentsHelper.isViewDocumentContentAvailable(document, contentActionsAvailable)"
                    id="NameLink"
                    label="document.Name"
                    tooltip="contactDocumentsHelper.ViewDocumentContentTooltip(document)"/>
                </LinkCell>

                <LinkCell
                  id="Actions"
                  label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions&quot;)">
                  <Link
                    action="DocumentPropertiesPopup.push(document, contact)"
                    available="metadataActionsEnabled"
                    icon="&quot;info&quot;"
                    iconType="svgFileName"
                    id="ViewPropertiesLink"
                    tooltip="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions.View.Tooltip&quot;)"/>
                  <Link
                    action="document.downloadContent()"
                    available="contactDocumentsHelper.isDownloadDocumentContentAvailable(document, contentActionsAvailable)"
                    download="attachment"
                    icon="&quot;document_download&quot;"
                    iconType="svgFileName"
                    id="DownloadLink"
                    tooltip="contactDocumentsHelper.DownloadDocumentContentTooltip(document)"
                    visible="contactDocumentsHelper.isDownloadDocumentContentVisible(document)"/>
                  <Link
                    action="UploadDocumentContentPopup.push(document)"
                    available="contactDocumentsHelper.isUploadDocumentContentAvailable(document, metadataActionsEnabled, contentActionsAvailable)"
                    icon="&quot;document_upload&quot;"
                    iconType="svgFileName"
                    id="UploadLink"
                    tooltip="contactDocumentsHelper.UploadDocumentContentTooltip(document)"
                    visible="!isReadOnly and contactDocumentsHelper.isUploadDocumentContentVisible(document)"/>
                  <Link
                    action="contact.unlinkDocumentForUI(document)"
                    available="contactDocumentsHelper.isRemoveDocumentLinkAvailable(document, metadataActionsEnabled)"
                    confirmMessage="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Actions.Delete.Confirm&quot;)"
                    icon="&quot;document_remove&quot; "
                    iconType="svgFileName"
                    id="ContactDocumentsLV_DeleteLink"
                    tooltip="contactDocumentsHelper.RemoveDocumentLinkTooltip(document)"
                    visible="!isReadOnly and contactDocumentsHelper.isRemoveDocumentLinkVisible(document)"/>
                  <Link
                    id="ContactDocumentsLV_ActionsDisabled"
                    label="contactDocumentsHelper.AsynchronousActionsMessage"
                    styleClass="none"
                    visible="document.PendingDocUID != null and document.DMS"/>
                </LinkCell>
                <TypeKeyCell
                  id="Type"
                  label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Type&quot;)"
                  printWidth="2"
                  value="document.Type"
                  valueType="typekey.DocumentType"/>
                <TypeKeyCell
                  id="Status"
                  label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Status&quot;)"
                  value="document.Status"
                  valueType="typekey.DocumentStatusType"/>
                <TextCell
                  id="Author"
                  label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Author&quot;)"
                  printWidth="2"
                  value="document.Author"/>
                <DateCell
                  dateFormat="short"
                  id="DateModified"
                  label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.DateUploaded&quot;)"
                  sortDirection="descending"
                  sortOrder="1"
                  timeFormat="short"
                  value="document.DateModified"/>
                <LinkCell
                  align="center"
                  id="HiddenDocument"
                  label="DisplayKey.get(&quot;Web.ContactDetail.DocumentsLV.Hidden&quot;)"
                  sortBy="document.Obsolete"
                  sortOrder="3"
                  visible="contact.Documents.hasMatch(\ doc -&gt; doc.Obsolete == true)">
                  <Link
                    icon="&quot;completed&quot;"
                    iconType="svgFileName"
                    id="Hidden"
                    visible="document.Obsolete"/>
                </LinkCell>
              </Row>
            </RowIterator>
          </ListViewPanel>
        </PanelRef>
      </Card>
      <Card
        id="VendorServicesCard"
        title="DisplayKey.get(&quot;Web.ContactDetail.Services.VendorServicesCardTitle&quot;)"
        visible="contactDetailsVendorHelper.VendorServicesCardIsVisible">
        <PanelSet>
          <Verbatim
            id="ServicesActionsDissabledMessage"
            label="DisplayKey.get(&quot;Web.ContactDetail.Services.ActionsDisabled&quot;)"
            labelStyleClass="alertBar"
            visible="contactDetailsVendorHelper.isShowServicesUnavailableWarning(CurrentLocation.InEditMode)"/>
        </PanelSet>
        <PanelRef
          def="VendorServicesLV(contact, contactDetailsVendorHelper, showInactiveService)"
          editable="false">
          <Toolbar>
            <ToolbarButton
              action="showInactiveService = !showInactiveService"
              id="showInactiveServiceButton"
              label="showInactiveService ? DisplayKey.get(&quot;Web.ContactDetail.Services.HideInactive&quot;) : DisplayKey.get(&quot;Web.ContactDetail.Services.ShowInactive&quot;)"
              visible="contactDetailsVendorHelper.hasInactiveService()"/>
            <ToolbarButton
              action="SelectServicesPopup.push(contact)"
              id="EditVendorServices"
              label="DisplayKey.get(&quot;Web.ContactDetail.Services.EditServices&quot;)"
              visible="contact.isVendor()"/>
          </Toolbar>
        </PanelRef>
      </Card>
      <Card
        id="RelatedContactsCard"
        title="DisplayKey.get(&quot;Web.ContactDetail.PageLinks.RelatedContacts&quot;)">
        <PanelRef
          def="RelatedContactsLV(contact)">
          <Toolbar
            visible="!contact.isRetired()">
            <EditButtons
              editVisible="!isReadOnly"
              pickValue="canPick ? contact : null"
              showUpdateConfirmMessage="contactDetailsVendorHelper.ShowLossOfServicesWarning"
              updateConfirmMessage="DisplayKey.get(&quot;Web.ContactDetail.Services.LossOfServicesAlert&quot;)"/>
            <ToolbarDivider/>
            <IteratorButtons
              iterator="RelatedContactsLV.RelatedContactsLV"/>
          </Toolbar>
        </PanelRef>
      </Card>
      <Card
        id="ReviewSummariesCard"
        title="DisplayKey.get(&quot;Web.Reviews.CardTitle&quot;)"
        visible="perm.ReviewSummary.list &amp;&amp; gw.api.contact.ABReviewUtil.haveReviewSummaries(contact)">
        <PanelRef
          def="ReviewSummaryPanelSet(contact)">
          <Toolbar/>
        </PanelRef>
      </Card>
      <Card
        id="HistoryCard"
        title="DisplayKey.get(&quot;Web.ContactDetail.PageLinks.History&quot;)">
        <PanelRef
          def="ContactHistoryLV(contact)">
          <Toolbar
            visible="!contact.isRetired()">
            <ToolbarDivider/>
            <IteratorButtons
              iterator="ContactHistoryLV.ContactHistoryLV"/>
          </Toolbar>
        </PanelRef>
      </Card>
    </CardViewPanel>
  </Screen>
</PCF>