<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="ContactBasicsDV"
    mode="ABPerson|ABPersonVendor|ABAdjudicator|ABUserContact|ABDoctor|ABAttorney|ABPolicyPerson">
    <Require
      name="contact"
      type="ABContact"/>
    <Variable
      initialValue="contact.CategoryScores != null and contact.CategoryScores.length &gt; 0"
      name="hasCategoryScores"
      type="Boolean"/>
    <Variable
      initialValue="new gw.web.ContactDetailsVendorHelper(contact)"
      name="contactDetailsVendorHelper"
      type="gw.web.ContactDetailsVendorHelper"/>
    <InputColumn
      id="InputColUs">
      <TextInput
        boldLabel="true"
        boldValue="true"
        id="CreateStatus"
        label="DisplayKey.get(&quot;Web.ContactDetail.CreateStatus&quot;)"
        value="contact.CreateStatus.DisplayName"
        visible="contact.CreateStatus != ContactCreationApprovalStatus.TC_APPROVED"/>
      <InputDivider
        visible="contact.CreateStatus != ContactCreationApprovalStatus.TC_APPROVED"/>
      <Label
        label="contact.getSubtype().DisplayName"/>
      <ABContactInput
        editable="true"
        forceContactSubtype="entity.ABPerson"
        id="Guardian"
        label="DisplayKey.get(&quot;Web.ContactDetail.AdditionalInfo.Guardian&quot;)"
        newContactMenu="NewPersonOnlyPickerMenuItemSet"
        parentContact="contact"
        value="(contact as ABPerson).Guardian"
        valueType="entity.ABPerson"
        visible="false"/>
      <InputSetRef
        def="GlobalPersonNameInputSet(new gw.api.name.ContactNameOwner(new gw.api.name.ABPersonNameDelegate(contact as ABPerson)))"
        mode="gw.api.name.NameLocaleSettings.PCFMode"
        visible="true"/>
      <InputDivider/>
      <TypeKeyRadioInput
        editable="true"
        id="ContactNacionalidad"
        label="DisplayKey.get(&quot;Contact.Nacionality&quot;)"
        required="true"
        value="contact.Nacionalidad"
        valueType="typekey.Nacionalidad">
        <PostOnChange/>
      </TypeKeyRadioInput>
      <TextInput
        editable="true"
        id="ContactRut"
        label="&quot;RUT&quot;"
        required="true"
        validationExpression="if (acmelab.ta.webservice.contact.RutValidation.validate(contact.RUT)) {if (contact.isDuplicate(contact.RUT) == false){return null} else {return &quot;El RUT ingresado ya existe.&quot;} } else return &quot;El RUT no es valido.&quot;"
        value="contact.RUT"
        visible="if(contact.Nacionalidad == Nacionalidad.TC_CHILE){return true}else{return false}"/>
      <TextInput
        editable="true"
        id="ContactPassport"
        label="DisplayKey.get(&quot;Contact.Passport&quot;)"
        required="true"
        value="contact.RUT"
        visible="if(contact.Nacionalidad == Nacionalidad.TC_EXTRANJERO){return true}else{return false}"/>
      <InputDivider/>
      <TextInput
        editable="true"
        id="ContactEmail"
        label="&quot;Email&quot;"
        required="true"
        value="contact.EmailAddress1"
        visible="true"/>
      <InputDivider/>
      <TypeKeyInput
        editable="true"
        id="CountrySelected"
        label="DisplayKey.get(&quot;Contact.Pais&quot;)"
        required="true"
        value="contact.CountrySel"
        valueType="typekey.Country"
        visible="true">
        <PostOnChange
          target="ContactRegion"/>
      </TypeKeyInput>
      <TypeKeyInput
        editable="true"
        id="ContactRegion"
        label="DisplayKey.get(&quot;Contact.Region&quot;)"
        required="true"
        value="contact.Region"
        valueType="typekey.Regions_Ext"
        visible="if(contact.CountrySel == Country.TC_CL){return true}else{return false}">
        <PostOnChange/>
      </TypeKeyInput>
      <TextInput
        editable="true"
        id="ContactDireccion"
        label="DisplayKey.get(&quot;Contact.Address&quot;)"
        required="true"
        value="contact.Direccion"
        visible="if(contact.CountrySel == null){return false}else{return true}"/>
      <TextInput
        editable="true"
        id="ContactCodigoPostal"
        label="DisplayKey.get(&quot;Contact.PostalCode&quot;)"
        regex="&quot;[0-9]{7}&quot;"
        required="true"
        value="contact.CodigoPostal"
        visible="if(contact.CountrySel == null){return false}else{return true}">
        <PostOnChange/>
      </TextInput>
      <InputSet
        visible="false">
        <TextInput
          editable="true"
          id="FormerName"
          label="DisplayKey.get(&quot;Web.ContactDetail.Name.FormerName&quot;)"
          value="(contact as ABPerson).FormerName"/>
      </InputSet>
      <TypeKeyInput
        editable="true"
        id="VendorAvailability"
        label="DisplayKey.get(&quot;Web.ContactDetail.VendorAvailability&quot;)"
        required="contact.Vendor"
        value="contact.VendorAvailability"
        valueType="typekey.VendorAvailabilityType"
        visible="contact.Vendor">
        <PostOnChange/>
      </TypeKeyInput>
      <TextInput
        editable="true"
        id="VendorUnavailableMessageInput"
        label="DisplayKey.get(&quot;Web.ContactDetail.VendorUnavailableMessage&quot;)"
        maxChars="255"
        value="contact.VendorUnavailableMessage"
        visible="contactDetailsVendorHelper.ShowVendorUnavailableMessage"/>
      <InputDivider/>
      <InputSetRef
        def="PrimaryAddressInputSet((contact as ABPerson))"
        visible="false"/>
      <InputDivider
        visible="hasCategoryScores or (contact.Score != null)"/>
      <Label
        label="DisplayKey.get(&quot;Web.Reviews.ReviewPerformance&quot;)"
        visible="false"/>
      <TextInput
        id="score"
        label="DisplayKey.get(&quot;Web.Reviews.OverallScore&quot;)"
        value="contact.Score"
        valueType="java.lang.Integer"
        visible="false"/>
      <ListViewInput
        label="DisplayKey.get(&quot;Web.Reviews.CategoryScores&quot;)"
        visible="false">
        <Toolbar/>
        <ListViewPanel
          id="CategoryScoresLV">
          <RowIterator
            editable="false"
            elementName="categoryScore"
            pageSize="0"
            value="contact.getSortedCategoryScores()"
            valueType="entity.ABContactCategoryScore[]">
            <Row>
              <TypeKeyCell
                enableSort="false"
                id="Category"
                label="DisplayKey.get(&quot;Web.Reviews.Category&quot;)"
                value="categoryScore.ReviewCategory"
                valueType="typekey.ReviewCategory"/>
              <TextCell
                enableSort="false"
                id="Score"
                label="DisplayKey.get(&quot;Web.Reviews.Score&quot;)"
                value="categoryScore.Score"
                valueType="java.lang.Integer"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputColumn>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;Web.ContactDetail.AdditionalInfo&quot;)"/>
      <InputSetRef
        def="ABUserContactBasicsInputSet(contact)"
        mode="contact.Subtype"/>
      <InputSetRef
        def="ABAdjudicatorBasicsInputSet(contact)"
        mode="contact.Subtype"/>
      <TypeKeyInput
        editable="true"
        id="Currency"
        label="DisplayKey.get(&quot;Web.ContactDetail.PreferredCurrency&quot;)"
        value="(contact as ABPerson).PreferredCurrency"
        valueType="typekey.Currency"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode()"/>
      <InputSet
        visible="isPersonOnly(contact) or isAdjudicator(contact) or isPolicyPerson(contact)">
        <PrivacyInput
          editable="true"
          encryptionExpression="(contact as ABPerson).maskTaxId(VALUE)"
          id="TaxID"
          label="DisplayKey.get(&quot;Web.ContactDetail.AdditionalInfo.TaxID&quot;)"
          value="(contact as ABPerson).TaxID"
          visible="false"/>
      </InputSet>
      <InputSet
        visible="isPersonOnly(contact)">
        <TypeKeyInput
          editable="true"
          id="TaxFilingStatus"
          label="DisplayKey.get(&quot;Web.ContactDetail.AdditionalInfo.TaxFilingStatus&quot;)"
          value="(contact as ABPerson).TaxFilingStatus"
          valueType="typekey.TaxFilingStatusType"
          visible="false"/>
        <DateInput
          editable="true"
          id="DateOfBirth"
          label="DisplayKey.get(&quot;Web.ContactDetail.AdditionalInfo.DateOfBirth&quot;)"
          validationExpression="if (contact.isUnderAge((contact as ABPerson).DateOfBirth )) return true else return null"
          value="(contact as ABPerson).DateOfBirth"/>
        <TypeKeyInput
          editable="true"
          id="Gender"
          label="DisplayKey.get(&quot;Web.ContactDetail.AdditionalInfo.Gender&quot;)"
          value="(contact as ABPerson).Gender"
          valueType="typekey.GenderType"/>
        <TypeKeyInput
          editable="true"
          id="MaritalStatus"
          label="DisplayKey.get(&quot;Web.ContactDetail.AdditionalInfo.MaritalStatus&quot;)"
          value="(contact as ABPerson).MaritalStatus"
          valueType="typekey.MaritalStatus"
          visible="false"/>
        <InputDivider/>
        <Label
          label="DisplayKey.get(&quot;Web.ContactDetail.Company&quot;)"
          visible="false"/>
        <TextInput
          editable="true"
          id="Occupation"
          label="DisplayKey.get(&quot;Web.ContactDetail.Company.Occupation&quot;)"
          value="(contact as ABPerson).Occupation"
          visible="false"/>
      </InputSet>
      <InputSet
        visible="false">
        <ABContactInput
          editable="true"
          id="Organization"
          label="DisplayKey.get(&quot;Web.ContactDetail.Company.Organization&quot;)"
          parentContact="contact"
          value="(contact as ABPerson).Employer"
          valueType="entity.ABCompany"/>
      </InputSet>
      <InputSetRef
        def="ABPersonVendorSpecialtyInputSet(contact as ABPerson)"
        mode="contact.Subtype"
        visible="false"/>
      <InputSetRef
        def="ABPersonVendorInputSet(contact as ABPerson)"
        mode="contact.Subtype"
        visible="false"/>
      <InputDivider/>
      <InputSet
        visible="false">
        <Label
          label="DisplayKey.get(&quot;Web.ContactDetail.DriversLicense&quot;)"/>
        <TextInput
          editable="true"
          id="LicenseNumber"
          label="DisplayKey.get(&quot;Web.ContactDetail.DriversLicense.LicenseNumber&quot;)"
          value="(contact as ABPerson).LicenseNumber"/>
        <TypeKeyInput
          editable="true"
          filter="VALUE.hasCategory(JurisdictionType.TC_DRIVING_LIC)"
          id="LicenseState"
          label="DisplayKey.get(&quot;Web.ContactDetail.DriversLicense.LicenseState&quot;)"
          value="(contact as ABPerson).LicenseState"
          valueType="typekey.Jurisdiction"/>
        <InputDivider/>
      </InputSet>
      <TextAreaInput
        boldLabel="true"
        editable="true"
        id="Notes"
        label="DisplayKey.get(&quot;Web.ContactDetail.Notes&quot;)"
        numRows="3"
        value="(contact as ABPerson).Notes"
        visible="false"/>
    </InputColumn>
    <InputFooterSection>
      <InputDivider/>
      <ListViewInput
        boldLabel="true"
        def="ContactEFTLV(contact)"
        label="DisplayKey.get(&quot;Web.ContactDetail.EFT&quot;)"
        labelAbove="true"
        visible="false">
        <Toolbar>
          <IteratorButtons
            iterator="ContactEFTLV.ContactEFTLV"/>
        </Toolbar>
      </ListViewInput>
    </InputFooterSection>
    <Code><![CDATA[function isVendor(aContact : ABContact) : boolean {
      return aContact typeis ABPersonVendor;
      }

      function isAdjudicator(aContact : ABContact) : boolean {
      return aContact typeis ABAdjudicator;
      }

      function isPersonOnly(aContact : ABContact) : boolean {
      return aContact.Subtype==TC_ABPERSON;
      }

      function isPolicyPerson(aContact : ABContact) : boolean {
      return aContact typeis ABPolicyPerson;
      }]]></Code>
  </DetailViewPanel>
</PCF>