<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="pcf.xsd">
  <Worksheet
    canEdit="false"
    closeOnLeaveScope="true"
    id="PendingChangesEditWorksheet"
    tabLabel="DisplayKey.get(&quot;Web.Contacts.PendingChanges.PendingChangesEditWorksheet.Title&quot;)"
    title="&quot;&quot;">
    <LocationEntryPoint
      signature="PendingChangesEditWorksheet(diffDisplay : gw.api.bean.compare.ui.DiffDisplay)"/>
    <Scope
      location="*"/>
    <Variable
      name="diffDisplay"
      type="gw.api.bean.compare.ui.DiffDisplay"/>
    <Screen>
      <Toolbar>
        <ToolbarButton
          action="CurrentLocation.cancel()"
          id="PendingChangesEditWorksheet_CancelButton"
          label="DisplayKey.get(&quot;Web.Contacts.PendingChanges.Buttons.Close&quot;)"/>
      </Toolbar>
      <ListViewPanel
        id="ContactComparisonLV">
        <Variable
          initialValue="getRowTreeRoot()"
          name="root"
          recalculateOnRefresh="true"
          type="gw.api.tree.RowTreeRootNode"/>
        <RowTree
          contentType="gw.api.bean.compare.ui.DiffDisplay"
          elementName="diff"
          id="lv2"
          pageSize="0"
          value="root">
          <Row
            editable="false">
            <TextCell
              id="LabelField"
              label="DisplayKey.get(&quot;Web.Contacts.PendingChanges.PendingUpdatesCard.DiffColumnLabel&quot;)"
              sortBy="getSortBy(diff)"
              sortOrder="1"
              value="diff.Label.elide(80)"/>
            <TextCell
              enableSort="false"
              id="OldContactField"
              label="DisplayKey.get(&quot;Web.Contacts.PendingChanges.PendingChangesEditWorksheet.BeforeChangesColumnLabel&quot;)"
              value="oldValue(diff)"/>
            <TextCell
              enableSort="false"
              id="NewContactField"
              label="DisplayKey.get(&quot;Web.Contacts.PendingChanges.PendingChangesEditWorksheet.AfterChangesColumnLabel&quot;)"
              value="newValue(diff)"/>
          </Row>
        </RowTree>
      </ListViewPanel>
    </Screen>
    <Code><![CDATA[uses gw.api.bean.compare.ui.DiffDisplay
uses gw.api.bean.compare.ui.EntityDiffDisplay
uses gw.api.contact.pendingchanges.DiffDisplays
uses gw.api.web.contact.PendingContactChangeUtil
uses gw.plugin.contact.pendingchange.ABContactContactDiffDisplay

function getRowTreeRoot() : gw.api.tree.RowTreeRootNode {
  return new gw.api.tree.RowTreeRootNode({diffDisplay},
    \r ->(r typeis DiffDisplay) ? DiffDisplays.getVisibleChildren(r) : {}, DiffDisplays.getVisibleChildren(diffDisplay).HasElements ? 1 : 0)
}

function getSortBy (diff : DiffDisplay) : String {
  return ((diff typeis EntityDiffDisplay) ? "B:" : "A:") + diff.Label
}

function oldValue(diff : DiffDisplay) : String {
  if (diff typeis ABContactContactDiffDisplay) { // go fetch the NewValue regardless of type
    return diff.OldValue.elide(60)
  } else if (not DiffDisplays.getAllChildren(diff).Empty and (diff.Type==CHANGED or (diff.Type==UNCHANGED and DiffDisplays.hasDeepChanges(diff))))
    return DisplayKey.get("Web.Contacts.PendingChanges.PendingUpdatesCard.Changed")  // default display key is empty string
  else if ((diff.Type == REMOVED or diff.Type == MOVED_FROM))
    return DisplayKey.get("Web.Contacts.PendingChanges.PendingUpdatesCard.Check")
  else
    return diff.OldValue.elide(60)
}

function newValue(diff : DiffDisplay) : String {
  if (diff typeis ABContactContactDiffDisplay) { // go fetch the NewValue regardless of type
    return diff.NewValue.elide(60)
  } else if ((diff.Type == ADDED or diff.Type == MOVED_TO))
    return DisplayKey.get("Web.Contacts.PendingChanges.PendingUpdatesCard.Check")
  else if (diff.Type == REMOVED or diff.Type == MOVED_FROM)
    return DisplayKey.get("Web.Contacts.PendingChanges.PendingUpdatesCard.Removed")
  else
    return diff.NewValue.elide(60)
}]]></Code>
  </Worksheet>
</PCF>